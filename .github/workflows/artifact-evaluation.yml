name: Artifact Claims

on:
  push:
  workflow_dispatch: # allow to manually trigger this workflow

env:
  IMAGE_NAME: diodon-artifact
  IMAGE_WORKFLOW_ARTIFACT_NAME: image.tar

jobs:
  Installation:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Installation
        run: ./install.sh

      - name: Check that image is available locally
        run: docker run --pull=never --platform linux/amd64 --rm --entrypoint "/bin/bash" ghcr.io/viperproject/diodon-artifact:latest -c "echo 'Success!'"

      - name: Export image
        run: docker save --platform linux/amd64 --output /tmp/image.tar ghcr.io/viperproject/diodon-artifact:latest

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.IMAGE_WORKFLOW_ARTIFACT_NAME }}
          path: /tmp/image.tar
          retention-days: 1

  Claims:
    name: Claim ${{ matrix.claimnr }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: Installation
    strategy:
      # tests should not be stopped when they fail on one of the OSes:
      fail-fast: false
      matrix:
        claimnr: [1,2,3,4,5,6,7,8,9]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.IMAGE_WORKFLOW_ARTIFACT_NAME }}
          path: /tmp

      - name: Load image
        run: docker load --input /tmp/image.tar

      - name: Check that image is available locally
        run: docker run --pull=never --platform linux/amd64 --rm --entrypoint "/bin/bash" ghcr.io/viperproject/diodon-artifact:latest -c "echo 'Success!'"

      - name: Run Claim
        run:  ./run.sh
        working-directory: claims/claim${{ matrix.claimnr }}
