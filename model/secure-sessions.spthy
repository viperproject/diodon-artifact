theory SSM
begin

builtins: symmetric-encryption, asymmetric-encryption, diffie-hellman, signing

functions: hash/1, kdf1/1, kdf2/1


/*
 * Modeling thoughts:
 * - To ensure that all operations are logged, the client is untrusted (i.e. an untrusted employee) and for arbitrary commands, we want to make sure that they
 *      end up (in an accessible form) in the logging service
 * - On the other hand to ensure that MGS is "just" forwarding (end-to-end encrypted) commands, we do not want to trust MGS and treat is as a DY attacker. In
 *      this setting, client <-> agent communication happens via an untrusted network to make the least possible assumptions about MGS.
 * - The property that all commands that get executed have been logged cannot be proven:
 *      Main problem is the lack of causal dependency of receiving a log message and the execution of the corresponding command.
 *      In particular:
 *      - Due to the attacker model, the attacker might simply drop all log messages such that none arrive
 *      - Proving that MGS sends a particular log message is a liveness property
 * - Instead, we want accountability, i.e., a logged command has indeed been issued by the client (or the client has reveal the session key, which it shouldn't).
 * 
 * Properties:
 * - Trusted MGS & agent: all commands have been logged
 *      not trusting MGS: logging could simply not happen
 *      not trusting agent: session key provided by agent (or commands encrypted with a company's public key) could be wrong. I.e., logging happens but reading
 *          log will fail
 * - 
 *
 * Questions:
 * - Whom do we actually trust? If we don't trust MGS, is guaranteed logging even achievable?
 * - How do KMS Keys (i.e. the symmetric one) work? Customers provide them (or generate them) but who guarantees that Amazon does not use it? Is this ensured
 *      via legal contracts? If so, what other trust assumptions can we make?
 * - We do trust KMS fully, right? I.e. agents and clients have a secure channel to KMS?
 * - What is the KMS key's purpose in Samarth's prototype? Isn't a DH key exchange sufficient?
 * - KMS seems to be used as a delegate which knows a party's own authentic secret keys and those of its communication partners. Can we trust the agent trust
 *      a client's key ID (which is provided as part of the secure session response)
 *
 *
 * Notes from call with Joey:
 * - hopefully, we do not have to trust MGS for authentication purposes
 * - KMS has to be fully trusted as it can obtain the session key (by decrypting the encrypted data key meant for the logging service) or forge signatures
 *      during the key exchange and thus become a man-in-the-middle.
 * - client should not be trusted and agent should not get the logging service's public key from the client. Instead, this should be provisioned (out of band)
 *      to the agent.
 * - talk to Victor (and Brandon / Jason?) about a static analysis to get guarantees for the code-base that we do not verify. E.g. check that security-relevant
 *      data (reading or changing the secret or public keys) is absent outside the verified code base.
 *
 * Insights:
 * - secure channel to KMS should be parameterized by run ID.
 * - otherwise, a client with the same ID as the agent suffers from replay attacks of KMS responses as messages are treated to be sent on the same channel
 *      from/to KMS.
 */


// Begin PKI & KMS infrastructure
rule Register_pk:
    [ Fr(~ltk) ]
  -->
    [ !Ltk($A, ~ltk), !Pk($A, pk(~ltk)) ]

rule Get_pk:
    [ !Pk(A, pubkey) ]
  -->
    [ Out(pubkey) ]

rule Reveal_ltk:
    [ !Ltk(A, ltk) ]
  --[ Reveal(A), LtkReveal(A), LtkRevealKey(ltk) ]->
    [ Out(ltk) ]

rule Register_KmsSignKey:
    [ Fr(~SignKey) ]
  --[ CreateSignKey($KeyOwnerId, $LtkARN, ~SignKey) ]->
    [ !KmsSignKey($KeyOwnerId, $LtkARN, ~SignKey) ]

rule Reveal_KmsSignKey:
    [ !KmsSignKey(KeyOwnerId, LtkARN, SignKey) ]
  --[ KmsSignKeyReveal(LtkARN), KmsSignKeyRevealOwner(KeyOwnerId) ]->
    [ Out(SignKey) ]
// End PKI & KMS infrastructure


// KMS checks that a particular client ID is allowed to use a KMSKeyId, that's the justification for treating connections to
// KMS as secure (i.e., authentic & confidential). Note that a hardware secure module (HSM) such as a Yubikey could act as a
// drop-in replacement for KMS, where a secure channel would be even more justified.
// Begin secure channel model
rule ChanOut_KMS:
        [ Out_KMS(A,B,clientRunId,x) ] // here, `clientRunId` is either the RunId of agent or client
      --[ ChanOut_KMS(A,B,clientRunId,x) ]->
        [ Sec(A,B,clientRunId,x) ] // note that we use a non-persistent `Sec` fact here as TLS prevents replay-attacks

rule ChanIn_KMS:
        [ Sec(A,B,clientRunId,x) ]
      --[ ChanIn_KMS(A,B,clientRunId,x) ]->
        [ In_KMS(A,B,clientRunId,x) ]
// End secure channel model


// Begin Agent
rule Agent_Init [color=#177AE8]:
    [ Fr(~RunId), !Pk($ReaderId, logPk) ]
  -->
    [ Setup_Agent(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk) ]

rule Agent_SendSignRequest [color=#177AE8]:
    [ Setup_Agent(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk), Fr(~x) ]
  --[ AgentStarted() ]->
    [ St_Agent_1(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x), Out_KMS($AgentId, $KMSId, ~RunId, <'SignRequest', $AgentLtKeyId, <'g'^~x, $ReaderId>, $ClientId>)[+] ]

rule Agent_RecvSignResponse [color=#177AE8]:
    [ St_Agent_1(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x), In_KMS($KMSId, $AgentId, ~RunId, <'SignResponse', SigX>)[+] ]
  --[ AgentSignResponse($KMSId, $AgentId, ~RunId, <'SignResponse', SigX>) ]->
    [ St_Agent_2(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX) ]

rule Agent_SendSecureSessionRequest [color=#177AE8]:
    let
      X = 'g'^~x
      msg = <'SecureSessionRequest', X, SigX, $AgentLtKeyId, $ReaderId>
    in
    [ St_Agent_2(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX) ]
  --[ AgentSecureSessionRequest($AgentId, $ClientId, X, SigX, $AgentLtKeyId) ]->
    [ St_Agent_3(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX), Out(msg), Out(<'Log', msg>) ]

rule Agent_RecvSecureSessionResponse [color=#177AE8]:
    let
      Y = 'g' ^ z // think of this as a group element check, i.e., we have to check in the implementation that Y and the shared secret are not 0, 1, or p-1 (see https://www.redhat.com/en/blog/understanding-and-verifying-security-diffie-hellman-parameters)
      msg = <'SecureSessionResponse', Y, SigY, ClientLtKeyId, hash(Y^~x)>
    in
    [ St_Agent_3(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX), In(msg) ]
  --[ AgentSecureSessionResponse($ClientId, $AgentId, Y, SigY, ClientLtKeyId, hash(Y^~x)) ]->
    [ St_Agent_4(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY) ]

rule Agent_SendVerifyRequest [color=#177AE8]:
    [ St_Agent_4(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY) ]
  -->
    [ St_Agent_5(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY), Out_KMS($AgentId, $KMSId, ~RunId, <'VerifyRequest', ClientLtKeyId, Y, SigY, $AgentId>)[+] ]

rule Agent_RecvVerifyResponse [color=#177AE8]:
    [ St_Agent_5(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY), In_KMS($KMSId, $AgentId, ~RunId, 'VerifyResponse')[+] ]
  --[ SecretX(~x) ]->
    [ St_Agent_6(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY) ]

rule Agent_SendSessionKeySignRequest [color=#177AE8]:
    [ St_Agent_6(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY) ]
  -->
    [ St_Agent_7(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY), Out_KMS($AgentId, $KMSId, ~RunId, <'SignRequest', $AgentLtKeyId, aenc(<kdf1(Y^~x), kdf2(Y^~x)>, logPk), $ClientId>)[+] ]

rule Agent_RecvSessionKeySignResponse [color=#177AE8]:
    [ St_Agent_7(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY), In_KMS($KMSId, $AgentId, ~RunId, <'SignResponse', SigSessionKey>)[+] ]
  -->
    [ St_Agent_8(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY, SigSessionKey) ]

rule Agent_SendEncryptedSessionKey [color=#177AE8]:
    let
      msg = <'EncryptedSessionKey', aenc(<kdf1(Y^~x), kdf2(Y^~x)>, logPk), SigSessionKey, $AgentLtKeyId, $ClientId>
    in
    [ St_Agent_8(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY, SigSessionKey) ]
  -->
    [ St_Agent_9(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY, SigSessionKey), Out(msg) ]

rule Agent_SendHandshakeComplete [color=#177AE8]:
    let
      msg = <'HandshakeComplete', senc(<'HandshakeCompletePayload', payload>, kdf1(Y^~x))>
    in
    [ St_Agent_9(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY, SigSessionKey), In(payload) ]
  --[ 
      Agent_Finish($AgentId),
      Secret(<kdf1(Y^~x), kdf2(Y^~x)>),
      Commit('Agent', 'Client', <$AgentId, $ClientId, kdf1(Y^~x), kdf2(Y^~x)>),
      Running('Agent', 'Client', <$AgentId, $ClientId, kdf1(Y^~x), kdf2(Y^~x)>),
      HonestReader($ReaderId),
      HonestKmsOwner($AgentId),
      HonestKmsOwner($ClientId),
      AgentHandshakeCompleted(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, ClientLtKeyId, Y)
    ]->
    [ St_Agent_10(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY, SigSessionKey), Out(msg), Out(<'Log', msg>) ]

rule Agent_ReceiveMessages [color=#177AE8]:
    [ St_Agent_10(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY, SigSessionKey), In(<'Message', senc(msg, kdf2(Y^~x))>) ]
  --[ AgentRecvLoop(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, ClientLtKeyId, Y) ]->
    [ St_Agent_10(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY, SigSessionKey) ]

rule Agent_SendMessages [color=#177AE8]:
    let
      msg = <'Message', senc(msg, kdf1(Y^~x))>
    in
    [ St_Agent_10(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY, SigSessionKey), In(msg) ]
  --[ AgentSendLoop(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, ClientLtKeyId, Y) ]->
    [ St_Agent_10(~RunId, $AgentId, $KMSId, $ClientId, $ReaderId, $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY, SigSessionKey), Out(msg), Out(<'Log', msg>) ]
// End Agent


// Begin Client
rule Client_Init [color=#E817E3]:
    [ Fr(~RunId) ]
  -->
    [ Client_Init(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId) ] // in the code, `AgentId` is called `TargetId`.

rule Client_RecvSecureSessionRequest [color=#E817E3]:
    let
      X = 'g' ^ z // think of this as a group element check
      msg = <'SecureSessionRequest', X, SigX, AgentLtKeyId, ReaderId>
    in
    [ Client_Init(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId), In(msg) ]
  --[ ClientStarted(), ClientSecureSessionRequest($AgentId, $ClientId, X, SigX, AgentLtKeyId) ]->
    [ Client_S1(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId) ]

rule Client_SendVerifyRequest [color=#E817E3]:
    [ Client_S1(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId) ]
  -->
    [ Client_S2(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId), Out_KMS($ClientId, $KMSId, ~RunId, <'VerifyRequest', AgentLtKeyId, <X, ReaderId>, SigX, $ClientId>) ]

rule Client_RecvVerifyResponse [color=#E817E3]:
    [ Client_S2(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId), In_KMS($KMSId, $ClientId, ~RunId, 'VerifyResponse')[+] ]
  -->
    [ Client_S3(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId) ]

rule Client_SendSignRequest [color=#E817E3]:
    [ Client_S3(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId), Fr(~y) ]
  -->
    [ Client_S4(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId, ~y), Out_KMS($ClientId, $KMSId, ~RunId, <'SignRequest', $ClientLtKeyId, 'g'^~y, $AgentId>) ]

rule Client_RecvSignResponse [color=#E817E3]:
    [ Client_S4(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId, ~y), In_KMS($KMSId, $ClientId, ~RunId, <'SignResponse', SigY>)[+] ]
  --[ ClientSignResponse($KMSId, $ClientId, ~RunId, <'SignResponse', SigY>) ]->
    [ Client_S5(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId, ~y, SigY) ]

rule Client_SendSecureSessionResponse [color=#E817E3]:
    let
      msg = <'SecureSessionResponse', 'g'^~y, SigY, $ClientLtKeyId, hash(X^~y)>
    in
    [ Client_S5(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId, ~y, SigY) ]
  --[
      SecretY(~y),
      ClientSendSessionResponse($ClientId),
      ClientSecureSessionResponse($ClientId, $AgentId, X, SigX, 'g'^~y, SigY, AgentLtKeyId, $ClientLtKeyId, hash(X^~y)),
      Running('Client', 'Agent', <$AgentId, $ClientId, kdf1(X^~y), kdf2(X^~y)>)
    ]->
    [ Client_S6(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId, ~y, SigY), Out(msg), Out(<'Log', msg>) ]

rule Client_RecvHandshakeComplete [color=#E817E3]:
    let
      msg = <'HandshakeComplete', senc(<'HandshakeCompletePayload', payload>, kdf1(X^~y))>
    in
    [ Client_S6(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId, ~y, SigY), In(msg) ]
  --[
      Client_Finish($ClientId),
      Secret(<kdf1(X^~y), kdf2(X^~y)>),
      Commit('Client', 'Agent', <$AgentId, $ClientId, kdf1(X^~y), kdf2(X^~y)>),
      HonestReader(ReaderId),
      HonestKmsOwner($AgentId),
      HonestKmsOwner($ClientId),
      ClientHandshakeCompleted(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, ~y)
    ]->
    [ Client_S7(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId, ~y, SigY) ]

rule Client_SendMessage [color=#E817E3]:
    let
      msg = <'Message', senc(payload, kdf2(X^~y))>
    in
    [ Client_S7(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId, ~y, SigY), In(payload) ] // we treat `payload` to be arbitrary
  --[ ClientSendMessage(msg), ClientSendLoop(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, ~y) ]->
    [ Client_S7(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId, ~y, SigY), Out(msg), Out(<'Log', msg>) ]

rule Client_RecvMessage [color=#E817E3]:
    [ Client_S7(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId, ~y, SigY), In(<'Message', senc(msg, kdf1(X^~y))>) ]
  --[ ClientRecvLoop(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, ~y) ]->
    [ Client_S7(~RunId, $ClientId, $KMSId, $AgentId, $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId, ~y, SigY) ]
// End Client


// Begin KMS
rule KMS_Init [color=#E88517]:
    []
  --[ KMSStarted() ]->
    [ !KMS_Init($KMSId) ]

rule KMS_RecvSignRequest [color=#E88517]:
    // We assume here that KMS authenticates AgentId and does provides access to signing operations using AgentLtKey only to authenticated clients.
    [ !KMS_Init($KMSId), !KmsSignKey(AgentId, AgentLtKeyId, AgentLtKey), In_KMS(AgentId, $KMSId, AgentRunId, <'SignRequest', AgentLtKeyId, payload, ReceiverId>)[+] ]
  --[ KMSSign(AgentId) ]->
    [ KMS_Sign_S1($KMSId, AgentId, AgentRunId, AgentLtKeyId, AgentLtKey, payload, ReceiverId) ]
  
rule KMS_SendSignResponse [color=#E88517]:
    [ KMS_Sign_S1($KMSId, AgentId, AgentRunId, AgentLtKeyId, AgentLtKey, payload, ReceiverId) ]
  --[ KMSSignResponse($KMSId, AgentId, AgentRunId, <'SignResponse', sign(<payload, ReceiverId>, AgentLtKey)>) ]->
    [ KMS_Sign_S2($KMSId, AgentId, AgentRunId, AgentLtKeyId, AgentLtKey, payload, ReceiverId), Out_KMS($KMSId, AgentId, AgentRunId, <'SignResponse', sign(<payload, ReceiverId>, AgentLtKey)>) ]

rule KMS_RecvVerifyRequest [color=#E88517]:
    [ !KMS_Init($KMSId), !KmsSignKey(AgentId, AgentLtKeyId, AgentLtKey), In_KMS(ClientId, $KMSId, ClientRunId, <'VerifyRequest', AgentLtKeyId, payload, sign(<payload, AgentId>, AgentLtKey), AgentId>)[+] ]
  -->
    [ KMS_Verify_S1($KMSId, ClientId, ClientRunId, AgentId, AgentLtKeyId, AgentLtKey, payload) ]
  
rule KMS_SendVerifyResponse [color=#E88517]:
    [ KMS_Verify_S1($KMSId, ClientId, ClientRunId, AgentId, AgentLtKeyId, AgentLtKey, payload) ]
  -->
    [ KMS_Verify_S2($KMSId, ClientId, ClientRunId, AgentId, AgentLtKeyId, AgentLtKey, payload), Out_KMS($KMSId, ClientId, ClientRunId, 'VerifyResponse') ]
// End KMS


// Begin Log Reader
rule Reader_Init [color=#17E81C]:
    [ !Ltk($ReaderId, ~ltk), Fr(~RunId) ]
  -->
    [ Reader_Init(~RunId, $ReaderId, $KMSId, ~ltk) ]

rule Reader_RecvEncryptedSessionKey [color=#17E81C]:
    [ Reader_Init(~RunId, $ReaderId, $KMSId, ~ltk), In(<'EncryptedSessionKey', aenc(<sessionKey1, sessionKey2>, pk(~ltk)), SigSessionKey, AgentLtKeyId, ClientId>) ]
  -->
    [ Reader_S1(~RunId, $ReaderId, $KMSId, ClientId, ~ltk, sessionKey1, sessionKey2, SigSessionKey, AgentLtKeyId) ]

rule Reader_SendEncryptedSessionKeyVerifyRequest [color=#17E81C]:
    [ Reader_S1(~RunId, $ReaderId, $KMSId, ClientId, ~ltk, sessionKey1, sessionKey2, SigSessionKey, AgentLtKeyId) ]
  -->
    [ Reader_S2(~RunId, $ReaderId, $KMSId, ClientId, ~ltk, sessionKey1, sessionKey2, SigSessionKey, AgentLtKeyId), Out_KMS($ReaderId, $KMSId, ~RunId, <'VerifyRequest', AgentLtKeyId, aenc(<sessionKey1, sessionKey2>, pk(~ltk)), SigSessionKey, ClientId>) ]

rule Reader_RecvEncryptedSessionKeyVerifyResponse [color=#17E81C]:
    [ Reader_S2(~RunId, $ReaderId, $KMSId, ClientId, ~ltk, sessionKey1, sessionKey2, SigSessionKey, AgentLtKeyId), In_KMS($KMSId, $ReaderId, ~RunId, 'VerifyResponse')[+] ]
  -->
    [ Reader_S3(~RunId, $ReaderId, $KMSId, ClientId, ~ltk, sessionKey1, sessionKey2, SigSessionKey, AgentLtKeyId) ]

rule Reader_DecryptMessage1 [color=#17E81C]:
    [ Reader_S3(~RunId, $ReaderId, $KMSId, ClientId, ~ltk, sessionKey1, sessionKey2, SigSessionKey, AgentLtKeyId), In(<'Log', <'Message', senc(msg, sessionKey1)>>) ]
  -->
    [ Reader_S3(~RunId, $ReaderId, $KMSId, ClientId, ~ltk, sessionKey1, sessionKey2, SigSessionKey, AgentLtKeyId) ]

rule Reader_DecryptMessage2 [color=#17E81C]:
    [ Reader_S3(~RunId, $ReaderId, $KMSId, ClientId, ~ltk, sessionKey1, sessionKey2, SigSessionKey, AgentLtKeyId), In(<'Log', <'Message', senc(msg, sessionKey2)>>) ]
  -->
    [ Reader_S3(~RunId, $ReaderId, $KMSId, ClientId, ~ltk, sessionKey1, sessionKey2, SigSessionKey, AgentLtKeyId) ]
// End Log Reader


// Begin lemmas

// similar to what `--auto-sources` would generate:
// auto-proven!
lemma agent_recv_sign_response_valid [sources]:
    "All KMSId AgentId RunId SigX #i.
      AgentSignResponse(KMSId, AgentId, RunId, <'SignResponse', SigX>)@i ==>
        Ex #j. KMSSignResponse(KMSId, AgentId, RunId, <'SignResponse', SigX>)@j & #j < #i
    "


// similar to what `--auto-sources` would generate:
// auto-proven!
lemma client_recv_sign_response_valid [sources]:
    "All KMSId ClientId RunId SigY #i.
      ClientSignResponse(KMSId, ClientId, RunId, <'SignResponse', SigY>)@i ==>
        Ex #j. KMSSignResponse(KMSId, ClientId, RunId, <'SignResponse', SigY>)@j & #j < #i
    "


/* Auxiliary lemmas to escape the loop in the transport phase */
lemma loop_induction_client [use_induction, reuse]:
  "(All RunId ClientId KMSId AgentId ClientLtKeyId AgentLtKeyId X y #i.
    (ClientSendLoop(RunId, ClientId, KMSId, AgentId, ClientLtKeyId, AgentLtKeyId, X, y)@i ==> (Ex #j. ClientHandshakeCompleted(RunId, ClientId, KMSId, AgentId, ClientLtKeyId, AgentLtKeyId, X, y)@j & j < i))) &
   (All RunId ClientId KMSId AgentId ClientLtKeyId AgentLtKeyId X y #i.
    (ClientRecvLoop(RunId, ClientId, KMSId, AgentId, ClientLtKeyId, AgentLtKeyId, X, y)@i ==> (Ex #j. ClientHandshakeCompleted(RunId, ClientId, KMSId, AgentId, ClientLtKeyId, AgentLtKeyId, X, y)@j & j < i)))"
// #region(collapsed) Proof
induction
  case empty_trace
  by contradiction /* from formulas */
next
  case non_empty_trace
  simplify
  solve( (∃ RunId ClientId KMSId AgentId ClientLtKeyId AgentLtKeyId X
            y #i.
           (ClientSendLoop( RunId, ClientId, KMSId, AgentId, ClientLtKeyId,
                            AgentLtKeyId, X, y
            ) @ #i)
          ∧
           ∀ #j.
            (ClientHandshakeCompleted( RunId, ClientId, KMSId, AgentId,
                                       ClientLtKeyId, AgentLtKeyId, X, y
             ) @ #j)
           ⇒
            ¬(#j < #i)) ∥
         (∃ RunId ClientId KMSId AgentId ClientLtKeyId AgentLtKeyId X y #i.
           (ClientRecvLoop( RunId, ClientId, KMSId, AgentId, ClientLtKeyId,
                            AgentLtKeyId, X, y
            ) @ #i)
          ∧
           ∀ #j.
            (ClientHandshakeCompleted( RunId, ClientId, KMSId, AgentId,
                                       ClientLtKeyId, AgentLtKeyId, X, y
             ) @ #j)
           ⇒
            ¬(#j < #i)) )
    case case_1
    solve( Client_S7( ~RunId, $ClientId, $KMSId, $AgentId,
                      $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId, ~y, SigY
           ) ▶₀ #i )
      case Client_RecvHandshakeComplete
      by contradiction /* from formulas */
    next
      case Client_RecvMessage
      by contradiction /* from formulas */
    next
      case Client_SendMessage
      by contradiction /* from formulas */
    qed
  next
    case case_2
    solve( Client_S7( ~RunId, $ClientId, $KMSId, $AgentId,
                      $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId, ~y, SigY
           ) ▶₀ #i )
      case Client_RecvHandshakeComplete
      by contradiction /* from formulas */
    next
      case Client_RecvMessage
      by contradiction /* from formulas */
    next
      case Client_SendMessage
      by contradiction /* from formulas */
    qed
  qed
qed
// #endregion
    

lemma loop_induction_agent [use_induction, reuse]:
  "(All RunId AgentId KMSId ClientId ReaderId AgentLtKeyId logPk x ClientLtKeyId Y #i.
     (AgentSendLoop(RunId, AgentId, KMSId, ClientId, ReaderId, AgentLtKeyId, logPk, x, ClientLtKeyId, Y)@i ==> (Ex #j. AgentHandshakeCompleted(RunId, AgentId, KMSId, ClientId, ReaderId, AgentLtKeyId, logPk, x, ClientLtKeyId, Y)@j & j < i))) &
   (All RunId AgentId KMSId ClientId ReaderId AgentLtKeyId logPk x ClientLtKeyId Y #i.
     (AgentRecvLoop(RunId, AgentId, KMSId, ClientId, ReaderId, AgentLtKeyId, logPk, x, ClientLtKeyId, Y)@i ==> (Ex #j. AgentHandshakeCompleted(RunId, AgentId, KMSId, ClientId, ReaderId, AgentLtKeyId, logPk, x, ClientLtKeyId, Y)@j & j < i)))"
// #region(collapsed) Proof
induction
  case empty_trace
  by contradiction /* from formulas */
next
  case non_empty_trace
  simplify
  solve( (∃ RunId AgentId KMSId ClientId ReaderId AgentLtKeyId logPk
            x ClientLtKeyId Y #i.
           (AgentSendLoop( RunId, AgentId, KMSId, ClientId, ReaderId,
                           AgentLtKeyId, logPk, x, ClientLtKeyId, Y
            ) @ #i)
          ∧
           ∀ #j.
            (AgentHandshakeCompleted( RunId, AgentId, KMSId, ClientId,
                                      ReaderId, AgentLtKeyId, logPk, x, ClientLtKeyId, Y
             ) @ #j)
           ⇒
            ¬(#j < #i)) ∥
         (∃ RunId AgentId KMSId ClientId ReaderId AgentLtKeyId logPk x
            ClientLtKeyId Y #i.
           (AgentRecvLoop( RunId, AgentId, KMSId, ClientId, ReaderId,
                           AgentLtKeyId, logPk, x, ClientLtKeyId, Y
            ) @ #i)
          ∧
           ∀ #j.
            (AgentHandshakeCompleted( RunId, AgentId, KMSId, ClientId,
                                      ReaderId, AgentLtKeyId, logPk, x, ClientLtKeyId, Y
             ) @ #j)
           ⇒
            ¬(#j < #i)) )
    case case_1
    solve( St_Agent_10( ~RunId, $AgentId, $KMSId, $ClientId, $ReaderId,
                      $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY,
                      SigSessionKey
           ) ▶₀ #i )
      case Agent_ReceiveMessages
      by contradiction /* from formulas */
    next
      case Agent_SendHandshakeComplete
      by contradiction /* from formulas */
    next
      case Agent_SendMessages
      by contradiction /* from formulas */
    qed
  next
    case case_2
    solve( St_Agent_10( ~RunId, $AgentId, $KMSId, $ClientId, $ReaderId,
                      $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY,
                      SigSessionKey
           ) ▶₀ #i )
      case Agent_ReceiveMessages
      by contradiction /* from formulas */
    next
      case Agent_SendHandshakeComplete
      by contradiction /* from formulas */
    next
      case Agent_SendMessages
      by contradiction /* from formulas */
    qed
  qed
qed
// #endregion


// auto-proven
lemma Agent_can_finish_wo_reveal3:
  exists-trace
  " Ex AgentId #i.
        Agent_Finish(AgentId) @ #i
      & (All #j #k. AgentStarted() @ #j & AgentStarted() @ #k ==> #j = #k)
      & (All #j #k. ClientStarted() @ #j & ClientStarted() @ #k ==> #j = #k)
      & (All #j #k. KMSStarted() @ #j & KMSStarted() @ #k ==> #j = #k)
      & not (Ex keyId #j. KmsSignKeyReveal(keyId)@ #j)
      & not (Ex key #j. LtkRevealKey(key)@ #j)
      & (All AgentId ClientId X SigX AgentLtKeyId #j. ClientSecureSessionRequest(AgentId, ClientId, X, SigX, AgentLtKeyId) @ #j ==> Ex #k. AgentSecureSessionRequest(AgentId, ClientId, X, SigX, AgentLtKeyId) @ #k)
      & (All ClientId AgentId Y SigY ClientLtKeyId sharedSecret #j. AgentSecureSessionResponse(ClientId, AgentId, Y, SigY, ClientLtKeyId, sharedSecret) @ #j ==> Ex X SigX AgentLtKeyId #k. ClientSecureSessionResponse(ClientId, AgentId, X, SigX, Y, SigY, AgentLtKeyId, ClientLtKeyId, sharedSecret) @ #k)
      & (All AgentId2 #j. Agent_Finish(AgentId2) @ #j ==> #i = #j)
      & (All msg1 msg2 #j #k. ClientSendMessage(msg1) @ #j & ClientSendMessage(msg2) @ #k ==> #j = #k)
  "


// auto-proven!
lemma Client_can_finish_wo_reveal3 [heuristic=C]:
  exists-trace
  " Ex ClientId #i.
        Client_Finish(ClientId) @ #i
      & (All #j #k. AgentStarted() @ #j & AgentStarted() @ #k ==> #j = #k)
      & (All #j #k. ClientStarted() @ #j & ClientStarted() @ #k ==> #j = #k)
      & (All #j #k. KMSStarted() @ #j & KMSStarted() @ #k ==> #j = #k)
      & (All AgentId ClientId X SigX AgentLtKeyId #j. ClientSecureSessionRequest(AgentId, ClientId, X, SigX, AgentLtKeyId) @ #j ==> Ex #k. AgentSecureSessionRequest(AgentId, ClientId, X, SigX, AgentLtKeyId) @ #k)
      & (All ClientId AgentId Y SigY ClientLtKeyId sharedSecret #j. AgentSecureSessionResponse(ClientId, AgentId, Y, SigY, ClientLtKeyId, sharedSecret) @ #j ==> Ex X SigX AgentLtKeyId #k. ClientSecureSessionResponse(ClientId, AgentId, X, SigX, Y, SigY, AgentLtKeyId, ClientLtKeyId, sharedSecret) @ #k)
      & (All AgentId1 AgentId2 #j #k. Agent_Finish(AgentId1) @ #j & Agent_Finish(AgentId2) @ #k ==> #j = #k)
      & (All ClientId2 #j. Client_Finish(ClientId2) @ #j ==> #i = #j)
      & (All ClientId1 ClientId2 #j #k. ClientSendSessionResponse(ClientId1) @ #j & ClientSendSessionResponse(ClientId2) @ #k ==> #j = #k)
  "


// auto-proven!
lemma x_is_secret [reuse, heuristic=S]:
    "All x #i.
      SecretX(x) @i ==>
      not (Ex #j. K(x)@j)
    "
// #region(collapsed) Proof
// this is a more minimal proof than what is derived automatically:
simplify
solve( St_Agent_5( ~RunId, $AgentId, $KMSId, $ClientId, $ReaderId,
                 $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY
       ) ▶₀ #i )
  case Agent_SendVerifyRequest
  by solve( !KU( ~x ) @ #vk )
qed
// #endregion


// auto-proven!
lemma y_is_secret [reuse, heuristic=S]:
    "All y #i.
      SecretY(y) @i ==>
      not (Ex #j. K(y)@j)
    "
// #region(collapsed) Proof
// this is a more minimal proof than what is derived automatically:
simplify
solve( Client_S5( ~RunId, $ClientId, $KMSId, $AgentId,
                  $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId, ~y, SigY
       ) ▶₀ #i )
  case Client_RecvSignResponse
  by solve( !KU( ~y ) @ #vk )
qed
// #endregion


// TODO: try to shorten proof
lemma SharedSecret_is_secret[reuse]:
    "All x #i.
      Secret(x) @i ==>
      not (Ex #j. K(x)@j)
        | (Ex C #r. KmsSignKeyRevealOwner(C)@r & HonestKmsOwner(C)@i)
        | (Ex C #r. LtkReveal(C)@r & HonestReader(C)@i)
    "
// #region(collapsed) Proof
simplify
solve( Secret( x ) @ #i )
  case Agent_SendHandshakeComplete
  solve( St_Agent_9( ~RunId, $AgentId, $KMSId, $ClientId, $ReaderId,
                     $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY,
                     SigSessionKey
         ) ▶₀ #i )
    case Agent_SendEncryptedSessionKey
    solve( In_KMS( $KMSId, $AgentId, ~RunId, 'VerifyResponse'
           )[+] ▶₁ #vr.4 )
      case ChanIn_KMS
      solve( In_KMS( $AgentId, $KMSId, ~RunId,
                     <'VerifyRequest', $LtkARN.2, payload.3,
                      sign(<payload.3, $KeyOwnerId>, ~SignKey.2), $KeyOwnerId>
             )[+] ▶₂ #vr.23 )
        case ChanIn_KMS
        solve( In_KMS( $KMSId, $AgentId, ~RunId,
                       <'SignResponse',
                        sign(<payload, ReceiverId>, ~SignKey)>
               )[+] ▶₁ #vr.13 )
          case ChanIn_KMS
          solve( In_KMS( $AgentId, $KMSId, ~RunId,
                         <'SignRequest', $LtkARN.1, payload, ReceiverId>
                 )[+] ▶₂ #vr.17 )
            case ChanIn_KMS_case_1
            solve( In_KMS( $AgentId, $KMSId, ~RunId,
                           <'SignRequest', $AgentLtKeyId,
                            <'g'^~x, $ReaderId>, $ClientId>
                   )[+] ▶₂ #vr.33 )
              case ChanIn_KMS
              solve( In_KMS( $AgentId, $KMSId, ~RunId,
                             <'SignRequest', $LtkARN.1, payload, ReceiverId>
                     )[+] ▶₂ #vr.9 )
                case ChanIn_KMS
                solve( !KU( sign(<Y, $AgentId>, ~SignKey.1) ) @ #vk.9 )
                  case Agent_SendEncryptedSessionKey
                  solve( In_KMS( $KMSId.1, $AgentId, ~RunId.1,
                                 <'SignResponse',
                                  sign(<payload.1, ReceiverId>, ~SignKey.3)>
                         )[+] ▶₁ #vr.53 )
                    case ChanIn_KMS
                    solve( In_KMS( $AgentId, $KMSId.1, ~RunId.1,
                                   <'SignRequest', $LtkARN.1, payload.1, ReceiverId>
                           )[+] ▶₂ #vr.63 )
                      case ChanIn_KMS_case_1
                      by solve( In_KMS( $AgentId, $KMSId.1, ~RunId.1,
                                        <'SignRequest', $LtkARN, Y, $AgentId>
                                )[+] ▶₂ #vr.50 )
                    next
                      case ChanIn_KMS_case_2
                      by contradiction
                    qed
                  qed
                next
                  case Agent_SendSecureSessionRequest_case_1
                  by solve( In_KMS( $AgentId, $KMSId.1, ~RunId.1,
                                    <'SignRequest', $LtkARN, Y, $AgentId>
                            )[+] ▶₂ #vr.46 )
                next
                  case Agent_SendSecureSessionRequest_case_2
                  by solve( In_KMS( $AgentId, $KMSId.1, ~RunId.1,
                                    <'SignRequest', $LtkARN, Y, $AgentId>
                            )[+] ▶₂ #vr.47 )
                next
                  case Client_SendSecureSessionResponse_case_1
                  solve( In_KMS( $KMSId.1, $AgentId, ~RunId.1,
                                 'VerifyResponse'
                         )[+] ▶₁ #vr.45 )
                    case ChanIn_KMS
                    solve( In_KMS( $AgentId, $KMSId.1, ~RunId.1,
                                   <'VerifyRequest', $LtkARN.1, payload.1,
                                    sign(<payload.1, $KeyOwnerId>, ~SignKey.3), $KeyOwnerId
                                   >
                           )[+] ▶₂ #vr.58 )
                      case ChanIn_KMS
                      solve( In_KMS( $AgentId, $KMSId.1, ~RunId.1,
                                     <'SignRequest', $LtkARN, Y, $AgentId>
                             )[+] ▶₂ #vr.50 )
                        case ChanIn_KMS
                        solve( !KU( kdf1('g'^(~x*~y)) ) @ #vk.6 )
                          case Agent_SendEncryptedSessionKey
                          solve( splitEqs(13) )
                            case split_case_1
                            solve( !KU( ~ltk ) @ #vk.22 )
                              case Reveal_ltk
                              by contradiction
                            qed
                          next
                            case split_case_2
                            solve( !KU( 'g'^(~x*~y*inv(~x.1)) ) @ #vk.26 )
                              case Agent_SendSecureSessionRequest_case_1
                              by solve( !KU( ~y ) @ #vk.31 )
                            next
                              case Agent_SendSecureSessionRequest_case_2
                              by solve( !KU( ~y ) @ #vk.31 )
                            next
                              case Client_SendSecureSessionResponse
                              by solve( !KU( ~x ) @ #vk.31 )
                            next
                              case c_exp
                              by solve( !KU( ~x ) @ #vk.32 )
                            qed
                          qed
                        next
                          case c_kdf1
                          solve( !KU( 'g'^(~x*~y) ) @ #vk.22 )
                            case Agent_SendSecureSessionRequest_case_1
                            by solve( !KU( ~y ) @ #vk.23 )
                          next
                            case Agent_SendSecureSessionRequest_case_2
                            by solve( !KU( ~y ) @ #vk.23 )
                          next
                            case Client_SendSecureSessionResponse
                            by solve( !KU( ~x ) @ #vk.23 )
                          next
                            case c_exp
                            by solve( !KU( ~x ) @ #vk.25 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case Client_SendSecureSessionResponse_case_2
                  solve( In_KMS( $KMSId.1, $AgentId, ~RunId.1,
                                 'VerifyResponse'
                         )[+] ▶₁ #vr.46 )
                    case ChanIn_KMS
                    solve( In_KMS( $AgentId, $KMSId.1, ~RunId.1,
                                   <'VerifyRequest', $LtkARN.1, payload.1,
                                    sign(<payload.1, $KeyOwnerId>, ~SignKey.3), $KeyOwnerId
                                   >
                           )[+] ▶₂ #vr.59 )
                      case ChanIn_KMS
                      solve( In_KMS( $AgentId, $KMSId.1, ~RunId.1,
                                     <'SignRequest', $LtkARN, Y, $AgentId>
                             )[+] ▶₂ #vr.51 )
                        case ChanIn_KMS
                        solve( !KU( kdf1('g'^(~x*~y)) ) @ #vk.6 )
                          case Agent_SendEncryptedSessionKey
                          solve( splitEqs(13) )
                            case split_case_1
                            solve( !KU( ~ltk ) @ #vk.22 )
                              case Reveal_ltk
                              by contradiction
                            qed
                          next
                            case split_case_2
                            solve( !KU( 'g'^(~x*~y*inv(~x.1)) ) @ #vk.26 )
                              case Agent_SendSecureSessionRequest_case_1
                              by solve( !KU( ~y ) @ #vk.31 )
                            next
                              case Agent_SendSecureSessionRequest_case_2
                              by solve( !KU( ~y ) @ #vk.31 )
                            next
                              case Client_SendSecureSessionResponse
                              by solve( !KU( ~x ) @ #vk.31 )
                            next
                              case c_exp
                              by solve( !KU( ~x ) @ #vk.32 )
                            qed
                          qed
                        next
                          case c_kdf1
                          solve( !KU( 'g'^(~x*~y) ) @ #vk.22 )
                            case Agent_SendSecureSessionRequest_case_1
                            by solve( !KU( ~y ) @ #vk.23 )
                          next
                            case Agent_SendSecureSessionRequest_case_2
                            by solve( !KU( ~y ) @ #vk.23 )
                          next
                            case Client_SendSecureSessionResponse
                            by solve( !KU( ~x ) @ #vk.23 )
                          next
                            case c_exp
                            by solve( !KU( ~x ) @ #vk.25 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_sign
                  solve( !KU( ~SignKey.1 ) @ #vk.14 )
                    case Reveal_KmsSignKey
                    by contradiction
                  qed
                qed
              qed
            qed
          next
            case ChanIn_KMS_case_2
            by contradiction
          qed
        qed
      qed
    qed
  qed
next
  case Client_RecvHandshakeComplete
  solve( Client_S6( ~RunId, $ClientId, $KMSId, $AgentId,
                    $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId, ~y, SigY
         ) ▶₀ #i )
    case Client_SendSecureSessionResponse
    solve( !KU( senc(<'HandshakeCompletePayload', payload.1
                     >,
                     kdf1(z))
           ) @ #vk.3 )
      case Agent_SendHandshakeComplete_case_1
      solve( In_KMS( $KMSId, $ClientId, ~RunId, 'VerifyResponse'
             )[+] ▶₁ #vr.4 )
        case ChanIn_KMS
        solve( In_KMS( $ClientId, $KMSId, ~RunId,
                       <'VerifyRequest', $LtkARN.3, payload.4,
                        sign(<payload.4, $KeyOwnerId>, ~SignKey.3), $KeyOwnerId>
               )[+] ▶₂ #vr.40 )
          case ChanIn_KMS
          solve( In_KMS( $ClientId, $KMSId, ~RunId,
                         <'SignRequest', $LtkARN.1, payload, ReceiverId>
                 )[+] ▶₂ #vr.9 )
            case ChanIn_KMS
            solve( In_KMS( $KMSId.1, $AgentId.1, ~RunId.1,
                           'VerifyResponse'
                   )[+] ▶₁ #vr.21 )
              case ChanIn_KMS
              solve( In_KMS( $AgentId.1, $KMSId.1, ~RunId.1,
                             <'VerifyRequest', $LtkARN.3, payload.3,
                              sign(<payload.3, $KeyOwnerId>, ~SignKey.4), $KeyOwnerId>
                     )[+] ▶₂ #vr.50 )
                case ChanIn_KMS
                solve( In_KMS( $KMSId.1, $KeyOwnerId, ~RunId.1,
                               <'SignResponse',
                                sign(<payload.1, ReceiverId>, ~SignKey.2)>
                       )[+] ▶₁ #vr.30 )
                  case ChanIn_KMS
                  solve( In_KMS( $KeyOwnerId, $KMSId.1, ~RunId.1,
                                 <'SignRequest', $LtkARN.1, payload.1, ReceiverId>
                         )[+] ▶₂ #vr.60 )
                    case ChanIn_KMS_case_1
                    solve( In_KMS( $KeyOwnerId, $KMSId.1, ~RunId.1,
                                   <'SignRequest', $LtkARN.2, payload.1, ReceiverId>
                           )[+] ▶₂ #vr.26 )
                      case ChanIn_KMS
                      solve( splitEqs(1) )
                        case split_case_1
                        solve( splitEqs(6) )
                          case split
                          solve( !KU( 'g'^(~y*inv(~x)) ) @ #vk.19 )
                            case Client_SendSecureSessionResponse_case_1
                            by solve( !KU( ~x ) @ #vk.26 )
                          next
                            case Client_SendSecureSessionResponse_case_2
                            by solve( !KU( ~x ) @ #vk.26 )
                          next
                            case c_exp
                            by solve( !KU( ~y ) @ #vk.26 )
                          qed
                        qed
                      next
                        case split_case_2
                        solve( !KU( sign(<Y, $KeyOwnerId>, ~SignKey.3) ) @ #vk.21 )
                          case Agent_SendEncryptedSessionKey
                          by solve( In_KMS( $KeyOwnerId, $KMSId.2, ~RunId.2,
                                            <'SignRequest', $LtkARN.1, Y, $KeyOwnerId>
                                    )[+] ▶₂ #vr.80 )
                        next
                          case Agent_SendSecureSessionRequest_case_1
                          by solve( In_KMS( $KeyOwnerId, $KMSId.2, ~RunId.2,
                                            <'SignRequest', $LtkARN.1, Y, $KeyOwnerId>
                                    )[+] ▶₂ #vr.76 )
                        next
                          case Agent_SendSecureSessionRequest_case_2
                          by solve( In_KMS( $KeyOwnerId, $KMSId.2, ~RunId.2,
                                            <'SignRequest', $LtkARN.1, Y, $KeyOwnerId>
                                    )[+] ▶₂ #vr.77 )
                        next
                          case Client_SendSecureSessionResponse_case_1
                          solve( In_KMS( $KeyOwnerId, $KMSId.2, ~RunId.2,
                                         <'SignRequest', $LtkARN.1, Y, $KeyOwnerId>
                                 )[+] ▶₂ #vr.80 )
                            case ChanIn_KMS
                            solve( In_KMS( $KMSId.2, $KeyOwnerId, ~RunId.2,
                                           'VerifyResponse'
                                   )[+] ▶₁ #vr.75 )
                              case ChanIn_KMS
                              solve( In_KMS( $KeyOwnerId, $KMSId.2, ~RunId.2,
                                             <'VerifyRequest', $LtkARN.1, payload.1,
                                              sign(<payload.1, $KeyOwnerId.1>, ~SignKey.5),
                                              $KeyOwnerId.1>
                                     )[+] ▶₂ #vr.90 )
                                case ChanIn_KMS
                                solve( !KU( sign(<<X, ReaderId.2>, $KeyOwnerId>,
                                                 ~SignKey.5)
                                       ) @ #vk.29 )
                                  case Agent_SendEncryptedSessionKey
                                  solve( In_KMS( $KeyOwnerId, $KMSId.3, ~RunId.3,
                                                 <'SignRequest', $LtkARN.1,
                                                  <X, ReaderId.2>, $KeyOwnerId>
                                         )[+] ▶₂ #vr.107 )
                                    case ChanIn_KMS
                                    solve( In_KMS( $KMSId.3, $KeyOwnerId, ~RunId.3,
                                                   <'SignResponse',
                                                    sign(<payload.1, ReceiverId>, ~SignKey.5)
                                                   >
                                           )[+] ▶₁ #vr.110 )
                                      case ChanIn_KMS
                                      solve( In_KMS( $KeyOwnerId, $KMSId.3, ~RunId.3,
                                                     <'SignRequest', $LtkARN.1,
                                                      payload.1, ReceiverId>
                                             )[+] ▶₂ #vr.122 )
                                        case ChanIn_KMS
                                        by contradiction /* cyclic */
                                      qed
                                    qed
                                  qed
                                next
                                  case Agent_SendSecureSessionRequest_case_1
                                  solve( In_KMS( $KMSId.3, $KeyOwnerId, ~RunId.3,
                                                 <'SignResponse',
                                                  sign(<<X, ReaderId.2>, $KeyOwnerId>,
                                                       ~SignKey.5)
                                                 >
                                         )[+] ▶₁ #vr.99 )
                                    case ChanIn_KMS
                                    solve( In_KMS( $KeyOwnerId, $KMSId.3, ~RunId.3,
                                                   <'SignRequest', $LtkARN.1,
                                                    <X, ReaderId.2>, $KeyOwnerId>
                                           )[+] ▶₂ #vr.108 )
                                      case ChanIn_KMS
                                      solve( splitEqs(0) )
                                        case split_case_1
                                        solve( !KU( kdf1('g'^(~x*~y)) ) @ #vk.12 )
                                          case Agent_SendEncryptedSessionKey
                                          solve( splitEqs(20) )
                                            case split_case_1
                                            solve( !KU( ~ltk ) @ #vk.25 )
                                              case Reveal_ltk
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case split_case_2
                                            solve( !KU( 'g'^(~x*~y*inv(~x.1)) ) @ #vk.29 )
                                              case Agent_SendSecureSessionRequest
                                              by solve( !KU( ~y ) @ #vk.34 )
                                            next
                                              case Client_SendSecureSessionResponse
                                              by solve( !KU( ~x ) @ #vk.34 )
                                            next
                                              case c_exp
                                              by solve( !KU( ~x ) @ #vk.35 )
                                            qed
                                          qed
                                        next
                                          case c_kdf1
                                          solve( !KU( 'g'^(~x*~y) ) @ #vk.25 )
                                            case Agent_SendSecureSessionRequest
                                            by solve( !KU( ~y ) @ #vk.26 )
                                          next
                                            case Client_SendSecureSessionResponse
                                            by solve( !KU( ~x ) @ #vk.26 )
                                          next
                                            case c_exp
                                            by solve( !KU( ~x ) @ #vk.28 )
                                          qed
                                        qed
                                      next
                                        case split_case_2
                                        solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.17 )
                                          case Agent_SendSecureSessionRequest_case_1
                                          by solve( !KU( ~y ) @ #vk.34 )
                                        next
                                          case Agent_SendSecureSessionRequest_case_2
                                          by solve( !KU( ~y ) @ #vk.34 )
                                        next
                                          case Client_SendSecureSessionResponse
                                          by solve( !KU( ~x ) @ #vk.34 )
                                        next
                                          case c_exp
                                          by solve( !KU( ~x ) @ #vk.35 )
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case Agent_SendSecureSessionRequest_case_2
                                  solve( In_KMS( $KMSId.3, $KeyOwnerId, ~RunId.3,
                                                 <'SignResponse',
                                                  sign(<<X, ReaderId.2>, $KeyOwnerId>,
                                                       ~SignKey.5)
                                                 >
                                         )[+] ▶₁ #vr.100 )
                                    case ChanIn_KMS
                                    solve( In_KMS( $KeyOwnerId, $KMSId.3, ~RunId.3,
                                                   <'SignRequest', $LtkARN.1,
                                                    <X, ReaderId.2>, $KeyOwnerId>
                                           )[+] ▶₂ #vr.109 )
                                      case ChanIn_KMS
                                      solve( splitEqs(0) )
                                        case split_case_1
                                        solve( !KU( kdf1('g'^(~x*~y)) ) @ #vk.12 )
                                          case Agent_SendEncryptedSessionKey
                                          solve( splitEqs(20) )
                                            case split_case_1
                                            solve( !KU( ~ltk ) @ #vk.25 )
                                              case Reveal_ltk
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case split_case_2
                                            solve( !KU( 'g'^(~x*~y*inv(~x.1)) ) @ #vk.29 )
                                              case Agent_SendSecureSessionRequest
                                              by solve( !KU( ~y ) @ #vk.34 )
                                            next
                                              case Client_SendSecureSessionResponse
                                              by solve( !KU( ~x ) @ #vk.34 )
                                            next
                                              case c_exp
                                              by solve( !KU( ~x ) @ #vk.35 )
                                            qed
                                          qed
                                        next
                                          case c_kdf1
                                          solve( !KU( 'g'^(~x*~y) ) @ #vk.25 )
                                            case Agent_SendSecureSessionRequest
                                            by solve( !KU( ~y ) @ #vk.26 )
                                          next
                                            case Client_SendSecureSessionResponse
                                            by solve( !KU( ~x ) @ #vk.26 )
                                          next
                                            case c_exp
                                            by solve( !KU( ~x ) @ #vk.28 )
                                          qed
                                        qed
                                      next
                                        case split_case_2
                                        solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.17 )
                                          case Agent_SendSecureSessionRequest_case_1
                                          by solve( !KU( ~y ) @ #vk.34 )
                                        next
                                          case Agent_SendSecureSessionRequest_case_2
                                          by solve( !KU( ~y ) @ #vk.34 )
                                        next
                                          case Client_SendSecureSessionResponse
                                          by solve( !KU( ~x ) @ #vk.34 )
                                        next
                                          case c_exp
                                          by solve( !KU( ~x ) @ #vk.35 )
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case Client_SendSecureSessionResponse_case_1
                                  by solve( In_KMS( $KeyOwnerId, $KMSId.3, ~RunId.3,
                                                    <'SignRequest', $LtkARN.1,
                                                     <X, ReaderId.2>, $KeyOwnerId>
                                            )[+] ▶₂ #vr.107 )
                                next
                                  case Client_SendSecureSessionResponse_case_2
                                  by solve( In_KMS( $KeyOwnerId, $KMSId.3, ~RunId.3,
                                                    <'SignRequest', $LtkARN.1,
                                                     <X, ReaderId.2>, $KeyOwnerId>
                                            )[+] ▶₂ #vr.108 )
                                next
                                  case c_sign
                                  solve( splitEqs(0) )
                                    case split_case_1
                                    solve( !KU( ~SignKey ) @ #vk.27 )
                                      case Reveal_KmsSignKey
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case split_case_2
                                    solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.16 )
                                      case Agent_SendSecureSessionRequest_case_1
                                      by solve( !KU( ~y ) @ #vk.38 )
                                    next
                                      case Agent_SendSecureSessionRequest_case_2
                                      by solve( !KU( ~y ) @ #vk.38 )
                                    next
                                      case Client_SendSecureSessionResponse
                                      by solve( !KU( ~x ) @ #vk.38 )
                                    next
                                      case c_exp
                                      by solve( !KU( ~x ) @ #vk.39 )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case Client_SendSecureSessionResponse_case_2
                          solve( In_KMS( $KeyOwnerId, $KMSId.2, ~RunId.2,
                                         <'SignRequest', $LtkARN.1, Y, $KeyOwnerId>
                                 )[+] ▶₂ #vr.81 )
                            case ChanIn_KMS
                            solve( In_KMS( $KMSId.2, $KeyOwnerId, ~RunId.2,
                                           'VerifyResponse'
                                   )[+] ▶₁ #vr.76 )
                              case ChanIn_KMS
                              solve( In_KMS( $KeyOwnerId, $KMSId.2, ~RunId.2,
                                             <'VerifyRequest', $LtkARN.1, payload.1,
                                              sign(<payload.1, $KeyOwnerId.1>, ~SignKey.5),
                                              $KeyOwnerId.1>
                                     )[+] ▶₂ #vr.91 )
                                case ChanIn_KMS
                                solve( splitEqs(0) )
                                  case split_case_1
                                  solve( !KU( kdf1('g'^(~x*~y)) ) @ #vk.8 )
                                    case Agent_SendEncryptedSessionKey
                                    solve( splitEqs(19) )
                                      case split_case_1
                                      solve( !KU( 'g'^(~x*~y*inv(~x.1)) ) @ #vk.29 )
                                        case Agent_SendSecureSessionRequest_case_1
                                        by solve( !KU( ~y ) @ #vk.34 )
                                      next
                                        case Agent_SendSecureSessionRequest_case_2
                                        by solve( !KU( ~y ) @ #vk.34 )
                                      next
                                        case Client_SendSecureSessionResponse
                                        by solve( !KU( ~x ) @ #vk.34 )
                                      next
                                        case c_exp
                                        by solve( !KU( ~x ) @ #vk.35 )
                                      qed
                                    next
                                      case split_case_2
                                      solve( !KU( sign(<<'g'^~x, ReaderId>,
                                                        $AgentId>,
                                                       ~SignKey)
                                             ) @ #vk.15 )
                                        case Agent_SendEncryptedSessionKey
                                        by solve( In_KMS( $AgentId, $KMSId.3, ~RunId.3,
                                                          <'SignRequest', $LtkARN,
                                                           <'g'^~x, ReaderId>,
                                                           $AgentId>
                                                  )[+] ▶₂ #vr.109 )
                                      next
                                        case Agent_SendSecureSessionRequest_case_1
                                        solve( In_KMS( $KMSId.3, $AgentId, ~RunId.3,
                                                       <'SignResponse',
                                                        sign(<<'g'^~x, ReaderId>,
                                                              $AgentId>,
                                                             ~SignKey)
                                                       >
                                               )[+] ▶₁ #vr.101 )
                                          case ChanIn_KMS
                                          solve( In_KMS( $KMSId.2, $AgentId.1, ~RunId.2,
                                                         <'SignResponse',
                                                          sign(<payload.2, ReceiverId.1>,
                                                               ~SignKey.4)
                                                         >
                                                 )[+] ▶₁ #vr.90 )
                                            case ChanIn_KMS
                                            solve( In_KMS( $AgentId, $KMSId.3, ~RunId.3,
                                                           <'SignRequest', $LtkARN,
                                                            <'g'^~x, ReaderId>,
                                                            $AgentId>
                                                   )[+] ▶₂ #vr.110 )
                                              case ChanIn_KMS
                                              solve( In_KMS( $AgentId.1, $KMSId.2, ~RunId.2,
                                                             <'SignRequest', $LtkARN,
                                                              payload.2, ReceiverId.1>
                                                     )[+] ▶₂ #vr.104 )
                                                case ChanIn_KMS_case_1
                                                solve( In_KMS( $AgentId.1, $KMSId.2, ~RunId.2,
                                                               <'SignRequest',
                                                                $LtkARN.1, payload.1, ReceiverId>
                                                       )[+] ▶₂ #vr.85 )
                                                  case ChanIn_KMS
                                                  solve( splitEqs(20) )
                                                    case split
                                                    solve( !KU( ~ltk ) @ #vk.25 )
                                                      case Reveal_ltk
                                                      by contradiction /* from formulas */
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case ChanIn_KMS_case_2
                                                by contradiction /* cyclic */
                                              qed
                                            qed
                                          qed
                                        qed
                                      next
                                        case Agent_SendSecureSessionRequest_case_2
                                        solve( In_KMS( $KMSId.2, $AgentId.1, ~RunId.2,
                                                       <'SignResponse',
                                                        sign(<payload.2, ReceiverId.1>,
                                                             ~SignKey.4)
                                                       >
                                               )[+] ▶₁ #vr.90 )
                                          case ChanIn_KMS
                                          solve( In_KMS( $AgentId.1, $KMSId.2, ~RunId.2,
                                                         <'SignRequest', $LtkARN.1,
                                                          payload.2, ReceiverId.1>
                                                 )[+] ▶₂ #vr.111 )
                                            case ChanIn_KMS_case_1
                                            solve( In_KMS( $KMSId.3, $AgentId, ~RunId.3,
                                                           <'SignResponse',
                                                            sign(<
                                                                  <'g'^~x, ReaderId>,
                                                                  $AgentId>,
                                                                 ~SignKey)
                                                           >
                                                   )[+] ▶₁ #vr.102 )
                                              case ChanIn_KMS
                                              solve( In_KMS( $AgentId, $KMSId.3, ~RunId.3,
                                                             <'SignRequest', $LtkARN,
                                                              <'g'^~x, ReaderId>,
                                                              $AgentId>
                                                     )[+] ▶₂ #vr.118 )
                                                case ChanIn_KMS
                                                solve( !KU( ~ltk ) @ #vk.26 )
                                                  case Reveal_ltk
                                                  solve( splitEqs(20) )
                                                    case split
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              qed
                                            qed
                                          next
                                            case ChanIn_KMS_case_2
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      next
                                        case Client_SendSecureSessionResponse_case_1
                                        by solve( In_KMS( $AgentId, $KMSId.3, ~RunId.3,
                                                          <'SignRequest', $LtkARN,
                                                           <'g'^~x, ReaderId>,
                                                           $AgentId>
                                                  )[+] ▶₂ #vr.109 )
                                      next
                                        case Client_SendSecureSessionResponse_case_2
                                        by solve( In_KMS( $AgentId, $KMSId.3, ~RunId.3,
                                                          <'SignRequest', $LtkARN,
                                                           <'g'^~x, ReaderId>,
                                                           $AgentId>
                                                  )[+] ▶₂ #vr.110 )
                                      next
                                        case c_sign
                                        solve( !KU( ~SignKey ) @ #vk.36 )
                                          case Reveal_KmsSignKey
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  next
                                    case c_kdf1
                                    solve( !KU( 'g'^(~x*~y) ) @ #vk.25 )
                                      case Agent_SendSecureSessionRequest_case_1
                                      by solve( !KU( ~y ) @ #vk.26 )
                                    next
                                      case Agent_SendSecureSessionRequest_case_2
                                      by solve( !KU( ~y ) @ #vk.26 )
                                    next
                                      case Client_SendSecureSessionResponse
                                      by solve( !KU( ~x ) @ #vk.26 )
                                    next
                                      case c_exp
                                      by solve( !KU( ~x ) @ #vk.28 )
                                    qed
                                  qed
                                next
                                  case split_case_2
                                  solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.14 )
                                    case Agent_SendSecureSessionRequest_case_1
                                    by solve( !KU( ~y ) @ #vk.34 )
                                  next
                                    case Agent_SendSecureSessionRequest_case_2
                                    by solve( !KU( ~y ) @ #vk.34 )
                                  next
                                    case Client_SendSecureSessionResponse
                                    by solve( !KU( ~x ) @ #vk.34 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~x ) @ #vk.35 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_sign
                          solve( !KU( sign(<<'g'^z, ReaderId>, $ClientId
                                           >,
                                           ~SignKey)
                                 ) @ #vk.12 )
                            case Agent_SendEncryptedSessionKey
                            solve( In_KMS( $KMSId.2, $ClientId, ~RunId.2,
                                           <'SignResponse',
                                            sign(<payload.1, ReceiverId>, ~SignKey.5)>
                                   )[+] ▶₁ #vr.83 )
                              case ChanIn_KMS
                              solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                             <'SignRequest', $LtkARN,
                                              <'g'^z, ReaderId>, $ClientId>
                                     )[+] ▶₂ #vr.80 )
                                case ChanIn_KMS
                                solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                               <'SignRequest', $LtkARN, payload.1,
                                                ReceiverId>
                                       )[+] ▶₂ #vr.93 )
                                  case ChanIn_KMS
                                  by contradiction /* cyclic */
                                qed
                              qed
                            qed
                          next
                            case Agent_SendSecureSessionRequest_case_1
                            solve( In_KMS( $KMSId.2, $ClientId, ~RunId.2,
                                           <'SignResponse',
                                            sign(<<'g'^z, ReaderId>, $ClientId>,
                                                 ~SignKey)
                                           >
                                   )[+] ▶₁ #vr.72 )
                              case ChanIn_KMS
                              solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                             <'SignRequest', $LtkARN,
                                              <'g'^z, ReaderId>, $ClientId>
                                     )[+] ▶₂ #vr.81 )
                                case ChanIn_KMS
                                solve( !KU( kdf1('g'^(~x*~y)) ) @ #vk.12 )
                                  case Agent_SendEncryptedSessionKey
                                  solve( splitEqs(15) )
                                    case split_case_1
                                    solve( !KU( ~ltk ) @ #vk.29 )
                                      case Reveal_ltk
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case split_case_2
                                    solve( !KU( 'g'^(~x*~y*inv(~x.3)) ) @ #vk.31 )
                                      case Agent_SendSecureSessionRequest
                                      by solve( !KU( ~y ) @ #vk.38 )
                                    next
                                      case Client_SendSecureSessionResponse_case_1
                                      by solve( !KU( ~x ) @ #vk.38 )
                                    next
                                      case Client_SendSecureSessionResponse_case_2
                                      by solve( !KU( ~x ) @ #vk.38 )
                                    next
                                      case c_exp
                                      by solve( !KU( ~x ) @ #vk.39 )
                                    qed
                                  qed
                                next
                                  case c_kdf1
                                  solve( !KU( 'g'^(~x*~y) ) @ #vk.28 )
                                    case Agent_SendSecureSessionRequest
                                    by solve( !KU( ~y ) @ #vk.29 )
                                  next
                                    case Client_SendSecureSessionResponse_case_1
                                    by solve( !KU( ~x ) @ #vk.29 )
                                  next
                                    case Client_SendSecureSessionResponse_case_2
                                    by solve( !KU( ~x ) @ #vk.29 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~x ) @ #vk.31 )
                                  qed
                                qed
                              qed
                            qed
                          next
                            case Agent_SendSecureSessionRequest_case_2
                            solve( In_KMS( $KMSId.2, $ClientId, ~RunId.2,
                                           <'SignResponse',
                                            sign(<<'g'^z, ReaderId>, $ClientId>,
                                                 ~SignKey)
                                           >
                                   )[+] ▶₁ #vr.73 )
                              case ChanIn_KMS
                              solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                             <'SignRequest', $LtkARN,
                                              <'g'^z, ReaderId>, $ClientId>
                                     )[+] ▶₂ #vr.82 )
                                case ChanIn_KMS
                                solve( !KU( kdf1('g'^(~x*~y)) ) @ #vk.11 )
                                  case Agent_SendEncryptedSessionKey
                                  solve( splitEqs(15) )
                                    case split_case_1
                                    solve( !KU( ~ltk ) @ #vk.29 )
                                      case Reveal_ltk
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case split_case_2
                                    solve( !KU( 'g'^(~x*~y*inv(~x.3)) ) @ #vk.31 )
                                      case Agent_SendSecureSessionRequest
                                      by solve( !KU( ~y ) @ #vk.38 )
                                    next
                                      case Client_SendSecureSessionResponse_case_1
                                      by solve( !KU( ~x ) @ #vk.38 )
                                    next
                                      case Client_SendSecureSessionResponse_case_2
                                      by solve( !KU( ~x ) @ #vk.38 )
                                    next
                                      case c_exp
                                      by solve( !KU( ~x ) @ #vk.39 )
                                    qed
                                  qed
                                next
                                  case c_kdf1
                                  solve( !KU( 'g'^(~x*~y) ) @ #vk.28 )
                                    case Agent_SendSecureSessionRequest
                                    by solve( !KU( ~y ) @ #vk.29 )
                                  next
                                    case Client_SendSecureSessionResponse_case_1
                                    by solve( !KU( ~x ) @ #vk.29 )
                                  next
                                    case Client_SendSecureSessionResponse_case_2
                                    by solve( !KU( ~x ) @ #vk.29 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~x ) @ #vk.31 )
                                  qed
                                qed
                              qed
                            qed
                          next
                            case Client_SendSecureSessionResponse_case_1
                            solve( In_KMS( $KMSId.2, $ClientId, ~RunId.2,
                                           'VerifyResponse'
                                   )[+] ▶₁ #vr.75 )
                              case ChanIn_KMS
                              solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                             <'VerifyRequest', $LtkARN.2, payload.1,
                                              sign(<payload.1, $KeyOwnerId.1>, ~SignKey.5),
                                              $KeyOwnerId.1>
                                     )[+] ▶₂ #vr.88 )
                                case ChanIn_KMS
                                by solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                  <'SignRequest', $LtkARN,
                                                   <'g'^z, ReaderId>, $ClientId>
                                          )[+] ▶₂ #vr.80 )
                              qed
                            qed
                          next
                            case Client_SendSecureSessionResponse_case_2
                            by solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                              <'SignRequest', $LtkARN,
                                               <'g'^z, ReaderId>, $ClientId>
                                      )[+] ▶₂ #vr.81 )
                          next
                            case c_sign
                            solve( !KU( ~SignKey ) @ #vk.30 )
                              case Reveal_KmsSignKey
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case ChanIn_KMS_case_2
                    by contradiction /* cyclic */
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Agent_SendHandshakeComplete_case_2
      solve( In_KMS( $KMSId, $ClientId, ~RunId, 'VerifyResponse'
             )[+] ▶₁ #vr.4 )
        case ChanIn_KMS
        solve( In_KMS( $ClientId, $KMSId, ~RunId,
                       <'VerifyRequest', $LtkARN.3, payload.4,
                        sign(<payload.4, $KeyOwnerId>, ~SignKey.3), $KeyOwnerId>
               )[+] ▶₂ #vr.41 )
          case ChanIn_KMS
          solve( In_KMS( $KMSId.1, $AgentId.1, ~RunId.1,
                         <'SignResponse',
                          sign(<payload.2, ReceiverId.1>, ~SignKey.2)>
                 )[+] ▶₁ #vr.31 )
            case ChanIn_KMS
            solve( In_KMS( $KMSId.1, $AgentId.1, ~RunId.1,
                           'VerifyResponse'
                   )[+] ▶₁ #vr.22 )
              case ChanIn_KMS
              solve( In_KMS( $AgentId.1, $KMSId.1, ~RunId.1,
                             <'VerifyRequest', $LtkARN.4, payload.4,
                              sign(<payload.4, $KeyOwnerId>, ~SignKey.4), $KeyOwnerId>
                     )[+] ▶₂ #vr.54 )
                case ChanIn_KMS
                solve( In_KMS( $KeyOwnerId, $KMSId.1, ~RunId.1,
                               <'SignRequest', $LtkARN.2, payload.2, ReceiverId.1>
                       )[+] ▶₂ #vr.59 )
                  case ChanIn_KMS_case_1
                  solve( In_KMS( $KeyOwnerId, $KMSId.1, ~RunId.1,
                                 <'SignRequest', $AgentLtKeyId,
                                  <'g'^~x, $ReaderId.1>, $ClientId.1>
                         )[+] ▶₂ #vr.49 )
                    case ChanIn_KMS
                    solve( In_KMS( $KeyOwnerId, $KMSId.1, ~RunId.1,
                                   <'SignRequest', $LtkARN.3, payload.2, ReceiverId.1>
                           )[+] ▶₂ #vr.27 )
                      case ChanIn_KMS
                      solve( In_KMS( $ClientId, $KMSId, ~RunId,
                                     <'SignRequest', $LtkARN.1, payload, ReceiverId>
                             )[+] ▶₂ #vr.9 )
                        case ChanIn_KMS
                        solve( !KU( sign(<<X, ReaderId>, $ClientId>, ~SignKey)
                               ) @ #vk.11 )
                          case Agent_SendEncryptedSessionKey
                          solve( In_KMS( $KMSId.2, $ClientId, ~RunId.2,
                                         <'SignResponse',
                                          sign(<payload.1, ReceiverId>, ~SignKey.5)>
                                 )[+] ▶₁ #vr.81 )
                            case ChanIn_KMS
                            solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                           <'SignRequest', $LtkARN, <X, ReaderId>,
                                            $ClientId>
                                   )[+] ▶₂ #vr.78 )
                              case ChanIn_KMS
                              solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                             <'SignRequest', $LtkARN, payload.1,
                                              ReceiverId>
                                     )[+] ▶₂ #vr.91 )
                                case ChanIn_KMS
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        next
                          case Agent_SendSecureSessionRequest_case_1
                          solve( In_KMS( $KMSId.2, $ClientId, ~RunId.2,
                                         <'SignResponse',
                                          sign(<<X, ReaderId>, $ClientId>, ~SignKey)>
                                 )[+] ▶₁ #vr.70 )
                            case ChanIn_KMS
                            solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                           <'SignRequest', $LtkARN, <X, ReaderId>,
                                            $ClientId>
                                   )[+] ▶₂ #vr.79 )
                              case ChanIn_KMS
                              solve( !KU( kdf1('g'^(~x*~y)) ) @ #vk.8 )
                                case Agent_SendEncryptedSessionKey
                                solve( splitEqs(14) )
                                  case split_case_1
                                  solve( !KU( ~ltk ) @ #vk.26 )
                                    case Reveal_ltk
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case split_case_2
                                  solve( !KU( 'g'^(~x*~y*inv(~x.3)) ) @ #vk.28 )
                                    case Agent_SendSecureSessionRequest
                                    by solve( !KU( ~y ) @ #vk.35 )
                                  next
                                    case Client_SendSecureSessionResponse_case_1
                                    by solve( !KU( ~x ) @ #vk.35 )
                                  next
                                    case Client_SendSecureSessionResponse_case_2
                                    by solve( !KU( ~x ) @ #vk.35 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~x ) @ #vk.36 )
                                  qed
                                qed
                              next
                                case c_kdf1
                                solve( !KU( 'g'^(~x*~y) ) @ #vk.25 )
                                  case Agent_SendSecureSessionRequest
                                  by solve( !KU( ~y ) @ #vk.26 )
                                next
                                  case Client_SendSecureSessionResponse_case_1
                                  by solve( !KU( ~x ) @ #vk.26 )
                                next
                                  case Client_SendSecureSessionResponse_case_2
                                  by solve( !KU( ~x ) @ #vk.26 )
                                next
                                  case c_exp
                                  by solve( !KU( ~x ) @ #vk.28 )
                                qed
                              qed
                            qed
                          qed
                        next
                          case Agent_SendSecureSessionRequest_case_2
                          solve( In_KMS( $KMSId.2, $ClientId, ~RunId.2,
                                         <'SignResponse',
                                          sign(<<X, ReaderId>, $ClientId>, ~SignKey)>
                                 )[+] ▶₁ #vr.71 )
                            case ChanIn_KMS
                            solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                           <'SignRequest', $LtkARN, <X, ReaderId>,
                                            $ClientId>
                                   )[+] ▶₂ #vr.80 )
                              case ChanIn_KMS
                              solve( !KU( kdf1('g'^(~x*~y)) ) @ #vk.7 )
                                case Agent_SendEncryptedSessionKey
                                solve( splitEqs(14) )
                                  case split_case_1
                                  solve( !KU( ~ltk ) @ #vk.26 )
                                    case Reveal_ltk
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case split_case_2
                                  solve( !KU( 'g'^(~x*~y*inv(~x.3)) ) @ #vk.28 )
                                    case Agent_SendSecureSessionRequest
                                    by solve( !KU( ~y ) @ #vk.35 )
                                  next
                                    case Client_SendSecureSessionResponse_case_1
                                    by solve( !KU( ~x ) @ #vk.35 )
                                  next
                                    case Client_SendSecureSessionResponse_case_2
                                    by solve( !KU( ~x ) @ #vk.35 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~x ) @ #vk.36 )
                                  qed
                                qed
                              next
                                case c_kdf1
                                solve( !KU( 'g'^(~x*~y) ) @ #vk.25 )
                                  case Agent_SendSecureSessionRequest
                                  by solve( !KU( ~y ) @ #vk.26 )
                                next
                                  case Client_SendSecureSessionResponse_case_1
                                  by solve( !KU( ~x ) @ #vk.26 )
                                next
                                  case Client_SendSecureSessionResponse_case_2
                                  by solve( !KU( ~x ) @ #vk.26 )
                                next
                                  case c_exp
                                  by solve( !KU( ~x ) @ #vk.28 )
                                qed
                              qed
                            qed
                          qed
                        next
                          case Client_SendSecureSessionResponse_case_1
                          by solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                            <'SignRequest', $LtkARN,
                                             <X, ReaderId>, $ClientId>
                                    )[+] ▶₂ #vr.78 )
                        next
                          case Client_SendSecureSessionResponse_case_2
                          by solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                            <'SignRequest', $LtkARN,
                                             <X, ReaderId>, $ClientId>
                                    )[+] ▶₂ #vr.79 )
                        next
                          case c_sign
                          solve( !KU( ~SignKey ) @ #vk.27 )
                            case Reveal_KmsSignKey
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case ChanIn_KMS_case_2
                  by contradiction /* cyclic */
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case c_senc
      solve( In_KMS( $ClientId, $KMSId, ~RunId,
                     <'SignRequest', $LtkARN, payload, ReceiverId>
             )[+] ▶₂ #vr.9 )
        case ChanIn_KMS
        solve( In_KMS( $KMSId, $ClientId, ~RunId, 'VerifyResponse'
               )[+] ▶₁ #vr.4 )
          case ChanIn_KMS
          solve( In_KMS( $ClientId, $KMSId, ~RunId,
                         <'VerifyRequest', $LtkARN, payload.1,
                          sign(<payload.1, $KeyOwnerId>, ~SignKey.1), $KeyOwnerId>
                 )[+] ▶₂ #vr.20 )
            case ChanIn_KMS
            solve( !KU( sign(<<X, ReaderId>, $ClientId>, ~SignKey)
                   ) @ #vk.11 )
              case Agent_SendEncryptedSessionKey
              solve( In_KMS( $KMSId.1, $ClientId, ~RunId.1,
                             <'SignResponse',
                              sign(<payload.1, ReceiverId>, ~SignKey.2)>
                     )[+] ▶₁ #vr.40 )
                case ChanIn_KMS
                solve( In_KMS( $ClientId, $KMSId.1, ~RunId.1,
                               <'SignRequest', $LtkARN, <X, ReaderId>, $ClientId
                               >
                       )[+] ▶₂ #vr.37 )
                  case ChanIn_KMS
                  solve( In_KMS( $ClientId, $KMSId.1, ~RunId.1,
                                 <'SignRequest', $LtkARN, payload.1, ReceiverId>
                         )[+] ▶₂ #vr.50 )
                    case ChanIn_KMS
                    by contradiction /* cyclic */
                  qed
                qed
              qed
            next
              case Agent_SendSecureSessionRequest_case_1
              solve( In_KMS( $KMSId.1, $ClientId, ~RunId.1,
                             <'SignResponse',
                              sign(<<X, ReaderId>, $ClientId>, ~SignKey)>
                     )[+] ▶₁ #vr.29 )
                case ChanIn_KMS
                solve( In_KMS( $ClientId, $KMSId.1, ~RunId.1,
                               <'SignRequest', $LtkARN, <X, ReaderId>, $ClientId
                               >
                       )[+] ▶₂ #vr.38 )
                  case ChanIn_KMS
                  solve( !KU( kdf1('g'^(~x*~y)) ) @ #vk.8 )
                    case Agent_SendEncryptedSessionKey
                    solve( splitEqs(7) )
                      case split_case_1
                      solve( !KU( ~ltk ) @ #vk.18 )
                        case Reveal_ltk
                        by contradiction /* from formulas */
                      qed
                    next
                      case split_case_2
                      solve( !KU( 'g'^(~x*~y*inv(~x.1)) ) @ #vk.22 )
                        case Agent_SendSecureSessionRequest
                        by solve( !KU( ~y ) @ #vk.29 )
                      next
                        case Client_SendSecureSessionResponse_case_1
                        by solve( !KU( ~x ) @ #vk.29 )
                      next
                        case Client_SendSecureSessionResponse_case_2
                        by solve( !KU( ~x ) @ #vk.29 )
                      next
                        case c_exp
                        by solve( !KU( ~x ) @ #vk.30 )
                      qed
                    qed
                  next
                    case c_kdf1
                    solve( !KU( 'g'^(~x*~y) ) @ #vk.18 )
                      case Agent_SendSecureSessionRequest
                      by solve( !KU( ~y ) @ #vk.19 )
                    next
                      case Client_SendSecureSessionResponse_case_1
                      by solve( !KU( ~x ) @ #vk.19 )
                    next
                      case Client_SendSecureSessionResponse_case_2
                      by solve( !KU( ~x ) @ #vk.19 )
                    next
                      case c_exp
                      by solve( !KU( ~x ) @ #vk.21 )
                    qed
                  qed
                qed
              qed
            next
              case Agent_SendSecureSessionRequest_case_2
              solve( In_KMS( $KMSId.1, $ClientId, ~RunId.1,
                             <'SignResponse',
                              sign(<<X, ReaderId>, $ClientId>, ~SignKey)>
                     )[+] ▶₁ #vr.30 )
                case ChanIn_KMS
                solve( In_KMS( $ClientId, $KMSId.1, ~RunId.1,
                               <'SignRequest', $LtkARN, <X, ReaderId>, $ClientId
                               >
                       )[+] ▶₂ #vr.39 )
                  case ChanIn_KMS
                  solve( !KU( kdf1('g'^(~x*~y)) ) @ #vk.7 )
                    case Agent_SendEncryptedSessionKey
                    solve( splitEqs(7) )
                      case split_case_1
                      solve( !KU( ~ltk ) @ #vk.18 )
                        case Reveal_ltk
                        by contradiction /* from formulas */
                      qed
                    next
                      case split_case_2
                      solve( !KU( 'g'^(~x*~y*inv(~x.1)) ) @ #vk.22 )
                        case Agent_SendSecureSessionRequest
                        by solve( !KU( ~y ) @ #vk.29 )
                      next
                        case Client_SendSecureSessionResponse_case_1
                        by solve( !KU( ~x ) @ #vk.29 )
                      next
                        case Client_SendSecureSessionResponse_case_2
                        by solve( !KU( ~x ) @ #vk.29 )
                      next
                        case c_exp
                        by solve( !KU( ~x ) @ #vk.30 )
                      qed
                    qed
                  next
                    case c_kdf1
                    solve( !KU( 'g'^(~x*~y) ) @ #vk.18 )
                      case Agent_SendSecureSessionRequest
                      by solve( !KU( ~y ) @ #vk.19 )
                    next
                      case Client_SendSecureSessionResponse_case_1
                      by solve( !KU( ~x ) @ #vk.19 )
                    next
                      case Client_SendSecureSessionResponse_case_2
                      by solve( !KU( ~x ) @ #vk.19 )
                    next
                      case c_exp
                      by solve( !KU( ~x ) @ #vk.21 )
                    qed
                  qed
                qed
              qed
            next
              case Client_SendSecureSessionResponse_case_1
              by solve( In_KMS( $ClientId, $KMSId.1, ~RunId.1,
                                <'SignRequest', $LtkARN, <X, ReaderId>, $ClientId
                                >
                        )[+] ▶₂ #vr.37 )
            next
              case Client_SendSecureSessionResponse_case_2
              by solve( In_KMS( $ClientId, $KMSId.1, ~RunId.1,
                                <'SignRequest', $LtkARN, <X, ReaderId>, $ClientId
                                >
                        )[+] ▶₂ #vr.38 )
            next
              case c_sign
              solve( !KU( ~SignKey ) @ #vk.20 )
                case Reveal_KmsSignKey
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed
// #endregion


// TODO: try to shorten the proof
lemma injectiveagreement_agent:
    "All AgentId ClientId k1 k2 #i.
      Commit('Agent', 'Client', <AgentId, ClientId, k1, k2>) @i
      ==> (Ex #j. Running('Client', 'Agent', <AgentId, ClientId, k1, k2>) @j & j < i
          & not (Ex AgentId2 ClientId2 #i2. Commit('Agent', 'Client', <AgentId2, ClientId2, k1, k2>) @i2
                             & not (#i2 = #i)))
                | (Ex C #r. LtkReveal(C)@r & HonestReader(C)@i)
                | (Ex C #r. KmsSignKeyRevealOwner(C)@r & HonestKmsOwner(C)@i)"
// #region(collapsed) Proof
simplify
solve( Commit( 'Agent', 'Client',
               <AgentId, ClientId, k1, k2>
       ) @ #i )
  case Agent_SendHandshakeComplete
  solve( St_Agent_9( ~RunId, $AgentId, $KMSId, $ClientId, $ReaderId,
                     $AgentLtKeyId, logPk, ~x, SigX, ClientLtKeyId, Y, SigY,
                     SigSessionKey
         ) ▶₀ #i )
    case Agent_SendEncryptedSessionKey
    solve( In_KMS( $KMSId, $AgentId, ~RunId, 'VerifyResponse'
           )[+] ▶₁ #vr.4 )
      case ChanIn_KMS
      solve( In_KMS( $AgentId, $KMSId, ~RunId,
                     <'VerifyRequest', $LtkARN.2, payload.3,
                      sign(<payload.3, $KeyOwnerId>, ~SignKey.2), $KeyOwnerId>
             )[+] ▶₂ #vr.23 )
        case ChanIn_KMS
        solve( In_KMS( $KMSId, $AgentId, ~RunId,
                       <'SignResponse',
                        sign(<payload, ReceiverId>, ~SignKey)>
               )[+] ▶₁ #vr.13 )
          case ChanIn_KMS
          solve( In_KMS( $AgentId, $KMSId, ~RunId,
                         <'SignRequest', $LtkARN.1, payload, ReceiverId>
                 )[+] ▶₂ #vr.33 )
            case ChanIn_KMS_case_1
            solve( In_KMS( $AgentId, $KMSId, ~RunId,
                           <'SignRequest', $LtkARN.1, payload, ReceiverId>
                   )[+] ▶₂ #vr.9 )
              case ChanIn_KMS
              solve( !KU( sign(<Y, $AgentId>, ~SignKey.1) ) @ #vk.6 )
                case Agent_SendEncryptedSessionKey
                by solve( In_KMS( $AgentId, $KMSId.1, ~RunId.1,
                                  <'SignRequest', $LtkARN, Y, $AgentId>
                          )[+] ▶₂ #vr.53 )
              next
                case Agent_SendSecureSessionRequest_case_1
                solve( In_KMS( $KMSId.1, $AgentId, ~RunId.1,
                               <'SignResponse', sign(<Y, $AgentId>, ~SignKey.1)
                               >
                       )[+] ▶₁ #vr.45 )
                  case ChanIn_KMS
                  by solve( In_KMS( $AgentId, $KMSId.1, ~RunId.1,
                                    <'SignRequest', $LtkARN, Y, $AgentId>
                            )[+] ▶₂ #vr.54 )
                qed
              next
                case Agent_SendSecureSessionRequest_case_2
                solve( In_KMS( $KMSId.1, $AgentId, ~RunId.1,
                               <'SignResponse', sign(<Y, $AgentId>, ~SignKey.1)
                               >
                       )[+] ▶₁ #vr.46 )
                  case ChanIn_KMS
                  by solve( In_KMS( $AgentId, $KMSId.1, ~RunId.1,
                                    <'SignRequest', $LtkARN, Y, $AgentId>
                            )[+] ▶₂ #vr.55 )
                qed
              next
                case Client_SendSecureSessionResponse_case_1
                solve( In_KMS( $KMSId.1, $AgentId, ~RunId.1,
                               'VerifyResponse'
                       )[+] ▶₁ #vr.48 )
                  case ChanIn_KMS
                  solve( In_KMS( $AgentId, $KMSId.1, ~RunId.1,
                                 <'VerifyRequest', $LtkARN.1, payload.1,
                                  sign(<payload.1, $KeyOwnerId>, ~SignKey.3), $KeyOwnerId>
                         )[+] ▶₂ #vr.61 )
                    case ChanIn_KMS
                    solve( In_KMS( $AgentId, $KMSId.1, ~RunId.1,
                                   <'SignRequest', $LtkARN, Y, $AgentId>
                           )[+] ▶₂ #vr.53 )
                      case ChanIn_KMS
                      solve( !KU( sign(<<X, ReaderId.1>, $AgentId>,
                                       ~SignKey.3)
                             ) @ #vk.15 )
                        case Agent_SendEncryptedSessionKey
                        solve( In_KMS( $KMSId.2, $AgentId, ~RunId.2,
                                       <'SignResponse',
                                        sign(<payload.1, ReceiverId>, ~SignKey.4)>
                               )[+] ▶₁ #vr.83 )
                          case ChanIn_KMS
                          solve( In_KMS( $AgentId, $KMSId.2, ~RunId.2,
                                         <'SignRequest', $LtkARN.1,
                                          <X, ReaderId.1>, $AgentId>
                                 )[+] ▶₂ #vr.80 )
                            case ChanIn_KMS
                            solve( In_KMS( $AgentId, $KMSId.2, ~RunId.2,
                                           <'SignRequest', $LtkARN, payload.1, ReceiverId
                                           >
                                   )[+] ▶₂ #vr.93 )
                              case ChanIn_KMS
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      next
                        case Agent_SendSecureSessionRequest_case_1
                        solve( In_KMS( $KMSId.2, $AgentId, ~RunId.2,
                                       <'SignResponse',
                                        sign(<<X, ReaderId.1>, $AgentId>, ~SignKey.3)
                                       >
                               )[+] ▶₁ #vr.72 )
                          case ChanIn_KMS
                          solve( In_KMS( $AgentId, $KMSId.2, ~RunId.2,
                                         <'SignRequest', $LtkARN, <X, ReaderId.1>,
                                          $AgentId>
                                 )[+] ▶₂ #vr.81 )
                            case ChanIn_KMS
                            solve( !KU( hash('g'^(~x*~y)) ) @ #vk.13 )
                              case Client_SendSecureSessionResponse_case_1
                              solve( In_KMS( $ClientId.1, $KMSId.3, ~RunId.3,
                                             <'SignRequest', $LtkARN.1, payload.1,
                                              ReceiverId>
                                     )[+] ▶₂ #vr.98 )
                                case ChanIn_KMS
                                solve( In_KMS( $KMSId.3, $ClientId.1, ~RunId.3,
                                               'VerifyResponse'
                                       )[+] ▶₁ #vr.93 )
                                  case ChanIn_KMS
                                  solve( In_KMS( $ClientId.1, $KMSId.3, ~RunId.3,
                                                 <'VerifyRequest', $LtkARN.1, payload.1,
                                                  sign(<payload.1, $KeyOwnerId>, ~SignKey.5),
                                                  $KeyOwnerId>
                                         )[+] ▶₂ #vr.109 )
                                    case ChanIn_KMS
                                    solve( splitEqs(11) )
                                      case split_case_1
                                      solve( Commit( 'Agent', 'Client',
                                                     <AgentId2, ClientId2,
                                                      kdf1('g'^(~x*~y)),
                                                      kdf2('g'^(~x*~y))>
                                             ) @ #i2 )
                                        case Agent_SendHandshakeComplete
                                        solve( St_Agent_9( ~RunId.1, $AgentId.1, $KMSId.1,
                                                           $ClientId, $ReaderId.1, $AgentLtKeyId.1,
                                                           logPk, ~x.1, SigX, ClientLtKeyId.1,
                                                           'g'^x.2, SigY, SigSessionKey
                                               ) ▶₀ #i2 )
                                          case Agent_SendEncryptedSessionKey
                                          solve( In_KMS( $KMSId.1, $AgentId.1, ~RunId.1,
                                                         <'SignResponse',
                                                          sign(<payload.1, ReceiverId>,
                                                               ~SignKey.3)
                                                         >
                                                 )[+] ▶₁ #vr.89 )
                                            case ChanIn_KMS
                                            solve( In_KMS( $KMSId.1, $AgentId.1, ~RunId.1,
                                                           'VerifyResponse'
                                                   )[+] ▶₁ #vr.80 )
                                              case ChanIn_KMS
                                              solve( In_KMS( $AgentId.1, $KMSId.1, ~RunId.1,
                                                             <'VerifyRequest',
                                                              $LtkARN.2, payload.4,
                                                              sign(<payload.4, $KeyOwnerId>,
                                                                   ~SignKey.5),
                                                              $KeyOwnerId>
                                                     )[+] ▶₂ #vr.104 )
                                                case ChanIn_KMS
                                                solve( In_KMS( $KeyOwnerId, $KMSId.1, ~RunId.1,
                                                               <'SignRequest',
                                                                $LtkARN.1, payload.1, ReceiverId>
                                                       )[+] ▶₂ #vr.99 )
                                                  case ChanIn_KMS_case_1
                                                  solve( In_KMS( $KeyOwnerId, $KMSId.1, ~RunId.1,
                                                                 <'SignRequest',
                                                                  $LtkARN.1, payload.1, ReceiverId
                                                                 >
                                                         )[+] ▶₂ #vr.85 )
                                                    case ChanIn_KMS
                                                    solve( splitEqs(15) )
                                                      case split_case_1
                                                      by contradiction /* from formulas */
                                                    next
                                                      case split_case_2
                                                      solve( !KU( 'g'^(~x*~y*inv(~x.1))
                                                             ) @ #vk.23 )
                                                        case Agent_SendSecureSessionRequest
                                                        by solve( !KU( ~y ) @ #vk.28 )
                                                      next
                                                        case Client_SendSecureSessionResponse
                                                        by solve( !KU( ~x ) @ #vk.28 )
                                                      next
                                                        case c_exp
                                                        by solve( !KU( ~x ) @ #vk.29 )
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case ChanIn_KMS_case_2
                                                  by contradiction /* cyclic */
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case split_case_2
                                      solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.21 )
                                        case Agent_SendSecureSessionRequest_case_1
                                        by solve( !KU( ~y ) @ #vk.28 )
                                      next
                                        case Agent_SendSecureSessionRequest_case_2
                                        by solve( !KU( ~y ) @ #vk.28 )
                                      next
                                        case Client_SendSecureSessionResponse
                                        by solve( !KU( ~x ) @ #vk.28 )
                                      next
                                        case c_exp
                                        by solve( !KU( ~x ) @ #vk.29 )
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case Client_SendSecureSessionResponse_case_2
                              solve( splitEqs(11) )
                                case split
                                solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.21 )
                                  case Agent_SendSecureSessionRequest_case_1
                                  by solve( !KU( ~y ) @ #vk.28 )
                                next
                                  case Agent_SendSecureSessionRequest_case_2
                                  by solve( !KU( ~y ) @ #vk.28 )
                                next
                                  case Client_SendSecureSessionResponse
                                  by solve( !KU( ~x ) @ #vk.28 )
                                next
                                  case c_exp
                                  by solve( !KU( ~x ) @ #vk.29 )
                                qed
                              qed
                            next
                              case c_hash
                              solve( !KU( 'g'^(~x*~y) ) @ #vk.19 )
                                case Agent_SendSecureSessionRequest_case_1
                                by solve( !KU( ~y ) @ #vk.20 )
                              next
                                case Agent_SendSecureSessionRequest_case_2
                                by solve( !KU( ~y ) @ #vk.20 )
                              next
                                case Client_SendSecureSessionResponse
                                by solve( !KU( ~x ) @ #vk.20 )
                              next
                                case c_exp
                                by solve( !KU( ~x ) @ #vk.22 )
                              qed
                            qed
                          qed
                        qed
                      next
                        case Agent_SendSecureSessionRequest_case_2
                        solve( !KU( hash('g'^(~x*~y)) ) @ #vk.10 )
                          case Client_SendSecureSessionResponse_case_1
                          solve( splitEqs(7) )
                            case split_case_1
                            solve( splitEqs(11) )
                              case split
                              solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.21 )
                                case Agent_SendSecureSessionRequest_case_1
                                by solve( !KU( ~y ) @ #vk.28 )
                              next
                                case Agent_SendSecureSessionRequest_case_2
                                by solve( !KU( ~y ) @ #vk.28 )
                              next
                                case Client_SendSecureSessionResponse
                                by solve( !KU( ~x ) @ #vk.28 )
                              next
                                case c_exp
                                by solve( !KU( ~x ) @ #vk.28 )
                              qed
                            qed
                          next
                            case split_case_2
                            solve( In_KMS( $KMSId.3, $ClientId.1, ~RunId.3,
                                           'VerifyResponse'
                                   )[+] ▶₁ #vr.87 )
                              case ChanIn_KMS
                              solve( In_KMS( $ClientId.1, $KMSId.3, ~RunId.3,
                                             <'VerifyRequest', $LtkARN.2, payload.2,
                                              sign(<payload.2, $KeyOwnerId>, ~SignKey.5),
                                              $KeyOwnerId>
                                     )[+] ▶₂ #vr.101 )
                                case ChanIn_KMS
                                solve( In_KMS( $KMSId.2, $AgentId, ~RunId.2,
                                               <'SignResponse',
                                                sign(<<'g'^z.1, ReaderId.1>,
                                                      $AgentId>,
                                                     ~SignKey.3)
                                               >
                                       )[+] ▶₁ #vr.73 )
                                  case ChanIn_KMS
                                  solve( In_KMS( $AgentId, $KMSId.2, ~RunId.2,
                                                 <'SignRequest', $LtkARN,
                                                  <'g'^z.1, ReaderId.1>, $AgentId>
                                         )[+] ▶₂ #vr.109 )
                                    case ChanIn_KMS
                                    solve( In_KMS( $KeyOwnerId, $KMSId.3, ~RunId.3,
                                                   <'SignRequest', $LtkARN.1, payload.1,
                                                    ReceiverId>
                                           )[+] ▶₂ #vr.92 )
                                      case ChanIn_KMS
                                      solve( (∀ #j.
                                               (K( <kdf1('g'^(~x*~y)),
                                                    kdf2('g'^(~x*~y))>
                                                ) @ #j)
                                              ⇒
                                               ⊥) ∥
                                             (∃ C #r.
                                               (KmsSignKeyRevealOwner( C ) @ #r) ∧
                                               (HonestKmsOwner( C ) @ #i)) ∥
                                             (∃ C #r.
                                               (LtkReveal( C ) @ #r) ∧ (HonestReader( C ) @ #i)) )
                                        case case_1
                                        solve( !KU( sign(<<'g'^x.2, ReaderId.2>,
                                                          $KeyOwnerId>,
                                                         ~SignKey.5)
                                               ) @ #vk.23 )
                                          case Agent_SendEncryptedSessionKey
                                          solve( In_KMS( $KMSId.4, $KeyOwnerId, ~RunId.4,
                                                         <'SignResponse',
                                                          sign(<payload.1, ReceiverId>,
                                                               ~SignKey.6)
                                                         >
                                                 )[+] ▶₁ #vr.130 )
                                            case ChanIn_KMS
                                            solve( In_KMS( $KeyOwnerId, $KMSId.4, ~RunId.4,
                                                           <'SignRequest', $LtkARN.1,
                                                            payload.1, ReceiverId>
                                                   )[+] ▶₂ #vr.140 )
                                              case ChanIn_KMS_case_1
                                              by solve( In_KMS( $KeyOwnerId, $KMSId.4, ~RunId.4,
                                                                <'SignRequest',
                                                                 $LtkARN.1,
                                                                 <'g'^x.2, ReaderId.2
                                                                 >,
                                                                 $KeyOwnerId>
                                                        )[+] ▶₂ #vr.127 )
                                            next
                                              case ChanIn_KMS_case_2
                                              by contradiction /* cyclic */
                                            qed
                                          qed
                                        next
                                          case Agent_SendSecureSessionRequest_case_1
                                          solve( In_KMS( $KMSId.4, $KeyOwnerId, ~RunId.4,
                                                         <'SignResponse',
                                                          sign(<
                                                                <'g'^x.2, ReaderId.2
                                                                >,
                                                                $KeyOwnerId>,
                                                               ~SignKey.5)
                                                         >
                                                 )[+] ▶₁ #vr.119 )
                                            case ChanIn_KMS
                                            solve( In_KMS( $KeyOwnerId, $KMSId.4, ~RunId.4,
                                                           <'SignRequest', $LtkARN.1,
                                                            <'g'^x.2, ReaderId.2>,
                                                            $KeyOwnerId>
                                                   )[+] ▶₂ #vr.128 )
                                              case ChanIn_KMS
                                              by solve( splitEqs(11) )
                                            qed
                                          qed
                                        next
                                          case Agent_SendSecureSessionRequest_case_2
                                          solve( In_KMS( $KMSId.4, $KeyOwnerId, ~RunId.4,
                                                         <'SignResponse',
                                                          sign(<
                                                                <'g'^x.2, ReaderId.2
                                                                >,
                                                                $KeyOwnerId>,
                                                               ~SignKey.5)
                                                         >
                                                 )[+] ▶₁ #vr.120 )
                                            case ChanIn_KMS
                                            solve( In_KMS( $AgentId, $KMSId.2, ~RunId.2,
                                                           <'SignRequest', $LtkARN,
                                                            <'g'^~x.1, $ReaderId.1>,
                                                            $AgentId>
                                                   )[+] ▶₂ #vr.77 )
                                              case ChanIn_KMS
                                              solve( In_KMS( $KeyOwnerId, $KMSId.4, ~RunId.4,
                                                             <'SignRequest', $LtkARN.1,
                                                              <'g'^x.2, ReaderId.2>,
                                                              $KeyOwnerId>
                                                     )[+] ▶₂ #vr.126 )
                                                case ChanIn_KMS
                                                solve( splitEqs(11) )
                                                  case split
                                                  solve( Commit( 'Agent', 'Client',
                                                                 <AgentId2, ClientId2,
                                                                  kdf1('g'^(~x*~y)),
                                                                  kdf2('g'^(~x*~y))>
                                                         ) @ #i2 )
                                                    case Agent_SendHandshakeComplete
                                                    solve( St_Agent_9( ~RunId.1, $AgentId.1,
                                                                       $KMSId.1, $ClientId,
                                                                       $ReaderId.1, $AgentLtKeyId.1,
                                                                       logPk, ~x.1, SigX,
                                                                       ClientLtKeyId.1,
                                                                       'g'^x.2, SigY,
                                                                       SigSessionKey
                                                           ) ▶₀ #i2 )
                                                      case Agent_SendEncryptedSessionKey
                                                      solve( In_KMS( $KMSId.1, $AgentId.1, ~RunId.1,
                                                                     <'SignResponse',
                                                                      sign(<payload.1, ReceiverId
                                                                           >,
                                                                           ~SignKey.3)
                                                                     >
                                                             )[+] ▶₁ #vr.89 )
                                                        case ChanIn_KMS
                                                        solve( splitEqs(16) )
                                                          case split_case_1
                                                          by contradiction /* from formulas */
                                                        next
                                                          case split_case_2
                                                          solve( !KU( 'g'^(~x*~y*inv(~x.1))
                                                                 ) @ #vk.23 )
                                                            case Agent_SendSecureSessionRequest
                                                            by solve( !KU( ~y ) @ #vk.28 )
                                                          next
                                                            case Client_SendSecureSessionResponse
                                                            by solve( !KU( ~x ) @ #vk.28 )
                                                          next
                                                            case c_exp
                                                            by solve( !KU( ~x ) @ #vk.29 )
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case Client_SendSecureSessionResponse_case_1
                                          solve( In_KMS( $AgentId, $KMSId, ~RunId,
                                                         <'SignRequest', $AgentLtKeyId,
                                                          <'g'^~x, $ReaderId>,
                                                          $ClientId>
                                                 )[+] ▶₂ #vr.28 )
                                            case ChanIn_KMS
                                            solve( splitEqs(11) )
                                              case split
                                              solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.24 )
                                                case Agent_SendSecureSessionRequest_case_1
                                                by solve( !KU( ~y ) @ #vk.36 )
                                              next
                                                case Agent_SendSecureSessionRequest_case_2
                                                by solve( !KU( ~y ) @ #vk.36 )
                                              next
                                                case Client_SendSecureSessionResponse
                                                by solve( !KU( ~x ) @ #vk.36 )
                                              next
                                                case c_exp
                                                by solve( !KU( ~x ) @ #vk.37 )
                                              qed
                                            qed
                                          qed
                                        next
                                          case Client_SendSecureSessionResponse_case_2
                                          solve( splitEqs(11) )
                                            case split
                                            solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.24 )
                                              case Agent_SendSecureSessionRequest_case_1
                                              by solve( !KU( ~y ) @ #vk.36 )
                                            next
                                              case Agent_SendSecureSessionRequest_case_2
                                              by solve( !KU( ~y ) @ #vk.36 )
                                            next
                                              case Client_SendSecureSessionResponse
                                              by solve( !KU( ~x ) @ #vk.36 )
                                            next
                                              case c_exp
                                              by solve( !KU( ~x ) @ #vk.37 )
                                            qed
                                          qed
                                        next
                                          case c_sign
                                          solve( splitEqs(11) )
                                            case split
                                            solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.23 )
                                              case Agent_SendSecureSessionRequest_case_1
                                              by solve( !KU( ~y ) @ #vk.32 )
                                            next
                                              case Agent_SendSecureSessionRequest_case_2
                                              by solve( !KU( ~y ) @ #vk.32 )
                                            next
                                              case Client_SendSecureSessionResponse
                                              by solve( !KU( ~x ) @ #vk.32 )
                                            next
                                              case c_exp
                                              by solve( !KU( ~x ) @ #vk.33 )
                                            qed
                                          qed
                                        qed
                                      next
                                        case case_2
                                        by contradiction /* from formulas */
                                      next
                                        case case_3
                                        by contradiction /* from formulas */
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case Client_SendSecureSessionResponse_case_2
                          solve( splitEqs(11) )
                            case split
                            solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.21 )
                              case Agent_SendSecureSessionRequest_case_1
                              by solve( !KU( ~y ) @ #vk.28 )
                            next
                              case Agent_SendSecureSessionRequest_case_2
                              by solve( !KU( ~y ) @ #vk.28 )
                            next
                              case Client_SendSecureSessionResponse
                              by solve( !KU( ~x ) @ #vk.28 )
                            next
                              case c_exp
                              by solve( !KU( ~x ) @ #vk.29 )
                            qed
                          qed
                        next
                          case c_hash
                          solve( !KU( 'g'^(~x*~y) ) @ #vk.19 )
                            case Agent_SendSecureSessionRequest_case_1
                            by solve( !KU( ~y ) @ #vk.20 )
                          next
                            case Agent_SendSecureSessionRequest_case_2
                            by solve( !KU( ~y ) @ #vk.20 )
                          next
                            case Client_SendSecureSessionResponse
                            by solve( !KU( ~x ) @ #vk.20 )
                          next
                            case c_exp
                            by solve( !KU( ~x ) @ #vk.22 )
                          qed
                        qed
                      next
                        case Client_SendSecureSessionResponse_case_1
                        by solve( In_KMS( $AgentId, $KMSId.2, ~RunId.2,
                                          <'SignRequest', $LtkARN,
                                           <X, ReaderId.1>, $AgentId>
                                  )[+] ▶₂ #vr.83 )
                      next
                        case Client_SendSecureSessionResponse_case_2
                        by solve( In_KMS( $AgentId, $KMSId.2, ~RunId.2,
                                          <'SignRequest', $LtkARN,
                                           <X, ReaderId.1>, $AgentId>
                                  )[+] ▶₂ #vr.84 )
                      next
                        case c_sign
                        solve( !KU( ~SignKey.3 ) @ #vk.21 )
                          case Reveal_KmsSignKey
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case Client_SendSecureSessionResponse_case_2
                solve( In_KMS( $AgentId, $KMSId.1, ~RunId.1,
                               <'SignRequest', $LtkARN, Y, $AgentId>
                       )[+] ▶₂ #vr.54 )
                  case ChanIn_KMS
                  solve( !KU( hash('g'^(~x*~y)) ) @ #vk.9 )
                    case Client_SendSecureSessionResponse_case_1
                    solve( In_KMS( $KMSId.2, $ClientId.1, ~RunId.2,
                                   'VerifyResponse'
                           )[+] ▶₁ #vr.69 )
                      case ChanIn_KMS
                      solve( In_KMS( $ClientId.1, $KMSId.2, ~RunId.2,
                                     <'VerifyRequest', $LtkARN.1, payload.2,
                                      sign(<payload.2, $KeyOwnerId>, ~SignKey.4), $KeyOwnerId
                                     >
                             )[+] ▶₂ #vr.83 )
                        case ChanIn_KMS
                        solve( In_KMS( $KMSId.1, $AgentId, ~RunId.1,
                                       'VerifyResponse'
                               )[+] ▶₁ #vr.49 )
                          case ChanIn_KMS
                          solve( In_KMS( $AgentId, $KMSId.1, ~RunId.1,
                                         <'VerifyRequest', $LtkARN.2, payload.2,
                                          sign(<payload.2, $KeyOwnerId.1>, ~SignKey.5),
                                          $KeyOwnerId.1>
                                 )[+] ▶₂ #vr.91 )
                            case ChanIn_KMS
                            solve( In_KMS( $KeyOwnerId, $KMSId.2, ~RunId.2,
                                           <'SignRequest', $LtkARN, payload.1, ReceiverId
                                           >
                                   )[+] ▶₂ #vr.74 )
                              case ChanIn_KMS
                              solve( splitEqs(10) )
                                case split
                                solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.21 )
                                  case Agent_SendSecureSessionRequest_case_1
                                  by solve( !KU( ~y ) @ #vk.28 )
                                next
                                  case Agent_SendSecureSessionRequest_case_2
                                  by solve( !KU( ~y ) @ #vk.28 )
                                next
                                  case Client_SendSecureSessionResponse
                                  by solve( !KU( ~x ) @ #vk.28 )
                                next
                                  case c_exp
                                  by solve( !KU( ~x ) @ #vk.29 )
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case Client_SendSecureSessionResponse_case_2
                    solve( In_KMS( $KMSId.2, $ClientId.1, ~RunId.2,
                                   'VerifyResponse'
                           )[+] ▶₁ #vr.70 )
                      case ChanIn_KMS
                      solve( In_KMS( $ClientId.1, $KMSId.2, ~RunId.2,
                                     <'VerifyRequest', $LtkARN.1, payload.2,
                                      sign(<payload.2, $KeyOwnerId>, ~SignKey.4), $KeyOwnerId
                                     >
                             )[+] ▶₂ #vr.84 )
                        case ChanIn_KMS
                        solve( In_KMS( $KMSId.1, $AgentId, ~RunId.1,
                                       'VerifyResponse'
                               )[+] ▶₁ #vr.49 )
                          case ChanIn_KMS
                          solve( In_KMS( $AgentId, $KMSId.1, ~RunId.1,
                                         <'VerifyRequest', $LtkARN.2, payload.2,
                                          sign(<payload.2, $KeyOwnerId.1>, ~SignKey.5),
                                          $KeyOwnerId.1>
                                 )[+] ▶₂ #vr.92 )
                            case ChanIn_KMS
                            solve( In_KMS( $KeyOwnerId, $KMSId.2, ~RunId.2,
                                           <'SignRequest', $LtkARN, payload.1, ReceiverId
                                           >
                                   )[+] ▶₂ #vr.75 )
                              case ChanIn_KMS
                              solve( splitEqs(12) )
                                case split_case_1
                                solve( splitEqs(10) )
                                  case split
                                  solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.21 )
                                    case Agent_SendSecureSessionRequest_case_1
                                    by solve( !KU( ~y ) @ #vk.28 )
                                  next
                                    case Agent_SendSecureSessionRequest_case_2
                                    by solve( !KU( ~y ) @ #vk.28 )
                                  next
                                    case Client_SendSecureSessionResponse
                                    by solve( !KU( ~x ) @ #vk.28 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~x ) @ #vk.28 )
                                  qed
                                qed
                              next
                                case split_case_2
                                solve( splitEqs(10) )
                                  case split_case_1
                                  solve( !KU( sign(<<'g'^~x, ReaderId.1>, $AgentId
                                                   >,
                                                   ~SignKey.3)
                                         ) @ #vk.15 )
                                    case Agent_SendEncryptedSessionKey
                                    solve( In_KMS( $KMSId.2, $AgentId, ~RunId.2,
                                                   <'SignResponse',
                                                    sign(<payload.1, ReceiverId>, ~SignKey.4)
                                                   >
                                           )[+] ▶₁ #vr.88 )
                                      case ChanIn_KMS
                                      by solve( In_KMS( $AgentId, $KMSId.2, ~RunId.2,
                                                        <'SignRequest', $LtkARN.1,
                                                         <'g'^~x, ReaderId.1>,
                                                         $AgentId>
                                                )[+] ▶₂ #vr.85 )
                                    qed
                                  next
                                    case Agent_SendSecureSessionRequest_case_1
                                    solve( In_KMS( $AgentId, $KMSId.2, ~RunId.2,
                                                   <'SignRequest', $LtkARN,
                                                    <'g'^~x, ReaderId.1>, $AgentId>
                                           )[+] ▶₂ #vr.81 )
                                      case ChanIn_KMS
                                      solve( Commit( 'Agent', 'Client',
                                                     <AgentId2, ClientId2,
                                                      kdf1('g'^(~x*~y)),
                                                      kdf2('g'^(~x*~y))>
                                             ) @ #i2 )
                                        case Agent_SendHandshakeComplete
                                        solve( St_Agent_9( ~RunId.1, $AgentId.1, $KMSId.1,
                                                           $ClientId, $ReaderId.1, $AgentLtKeyId.1,
                                                           logPk, ~x.1, SigX, ClientLtKeyId.1,
                                                           'g'^x.2, SigY, SigSessionKey
                                               ) ▶₀ #i2 )
                                          case Agent_SendEncryptedSessionKey
                                          solve( splitEqs(16) )
                                            case split_case_1
                                            by contradiction /* from formulas */
                                          next
                                            case split_case_2
                                            solve( !KU( 'g'^(~x*~y*inv(~x.1)) ) @ #vk.23 )
                                              case Agent_SendSecureSessionRequest
                                              by solve( !KU( ~y ) @ #vk.28 )
                                            next
                                              case Client_SendSecureSessionResponse
                                              by solve( !KU( ~x ) @ #vk.28 )
                                            next
                                              case c_exp
                                              by solve( !KU( ~x ) @ #vk.29 )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case Agent_SendSecureSessionRequest_case_2
                                    solve( In_KMS( $KMSId.2, $AgentId, ~RunId.2,
                                                   <'SignResponse',
                                                    sign(<<'g'^~x, ReaderId.1>,
                                                          $AgentId>,
                                                         ~SignKey.3)
                                                   >
                                           )[+] ▶₁ #vr.78 )
                                      case ChanIn_KMS
                                      solve( In_KMS( $AgentId, $KMSId.2, ~RunId.2,
                                                     <'SignRequest', $LtkARN,
                                                      <'g'^~x, ReaderId.1>, $AgentId
                                                     >
                                             )[+] ▶₂ #vr.87 )
                                        case ChanIn_KMS
                                        solve( Commit( 'Agent', 'Client',
                                                       <AgentId2, ClientId2,
                                                        kdf1('g'^(~x*~y)),
                                                        kdf2('g'^(~x*~y))>
                                               ) @ #i2 )
                                          case Agent_SendHandshakeComplete
                                          solve( St_Agent_9( ~RunId.1, $AgentId.1, $KMSId.1,
                                                             $ClientId, $ReaderId.1,
                                                             $AgentLtKeyId.1, logPk, ~x.1, SigX,
                                                             ClientLtKeyId.1, 'g'^x.2, SigY,
                                                             SigSessionKey
                                                 ) ▶₀ #i2 )
                                            case Agent_SendEncryptedSessionKey
                                            solve( splitEqs(16) )
                                              case split_case_1
                                              by contradiction /* from formulas */
                                            next
                                              case split_case_2
                                              solve( !KU( 'g'^(~x*~y*inv(~x.1)) ) @ #vk.23 )
                                                case Agent_SendSecureSessionRequest
                                                by solve( !KU( ~y ) @ #vk.28 )
                                              next
                                                case Client_SendSecureSessionResponse
                                                by solve( !KU( ~x ) @ #vk.28 )
                                              next
                                                case c_exp
                                                by solve( !KU( ~x ) @ #vk.29 )
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case Client_SendSecureSessionResponse_case_1
                                    solve( In_KMS( $AgentId, $KMSId, ~RunId,
                                                   <'SignRequest', $AgentLtKeyId,
                                                    <'g'^~x, $ReaderId>, $ClientId>
                                           )[+] ▶₂ #vr.28 )
                                      case ChanIn_KMS
                                      by solve( In_KMS( $AgentId, $KMSId.2, ~RunId.2,
                                                        <'SignRequest', $LtkARN,
                                                         <'g'^~x, ReaderId.1>,
                                                         $AgentId>
                                                )[+] ▶₂ #vr.82 )
                                    qed
                                  next
                                    case Client_SendSecureSessionResponse_case_2
                                    by solve( In_KMS( $AgentId, $KMSId.2, ~RunId.2,
                                                      <'SignRequest', $LtkARN,
                                                       <'g'^~x, ReaderId.1>, $AgentId
                                                      >
                                              )[+] ▶₂ #vr.86 )
                                  next
                                    case c_sign
                                    solve( !KU( ~SignKey.3 ) @ #vk.21 )
                                      case Reveal_KmsSignKey
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case split_case_2
                                  solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.21 )
                                    case Agent_SendSecureSessionRequest_case_1
                                    by solve( !KU( ~y ) @ #vk.28 )
                                  next
                                    case Agent_SendSecureSessionRequest_case_2
                                    by solve( !KU( ~y ) @ #vk.28 )
                                  next
                                    case Client_SendSecureSessionResponse
                                    by solve( !KU( ~x ) @ #vk.28 )
                                  next
                                    case c_exp
                                    by solve( !KU( ~x ) @ #vk.29 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_hash
                    solve( !KU( 'g'^(~x*~y) ) @ #vk.19 )
                      case Agent_SendSecureSessionRequest_case_1
                      by solve( !KU( ~y ) @ #vk.20 )
                    next
                      case Agent_SendSecureSessionRequest_case_2
                      by solve( !KU( ~y ) @ #vk.20 )
                    next
                      case Client_SendSecureSessionResponse
                      by solve( !KU( ~x ) @ #vk.20 )
                    next
                      case c_exp
                      by solve( !KU( ~x ) @ #vk.22 )
                    qed
                  qed
                qed
              next
                case c_sign
                solve( !KU( ~SignKey.1 ) @ #vk.11 )
                  case Reveal_KmsSignKey
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case ChanIn_KMS_case_2
            by contradiction /* cyclic */
          qed
        qed
      qed
    qed
  qed
qed
// #endregion


lemma injectiveagreement_client:
    "All AgentId ClientId k1 k2 #i.
      Commit('Client', 'Agent', <AgentId, ClientId, k1, k2>) @i
      ==> (Ex #j. Running('Agent', 'Client', <AgentId, ClientId, k1, k2>) @j & j < i
          & not (Ex AgentId2 ClientId2 #i2. Commit('Client', 'Agent', <AgentId2, ClientId2, k1, k2>) @i2
                             & not (#i2 = #i)))
                | (Ex C #r. LtkReveal(C)@r & HonestReader(C)@i)
                | (Ex C #r. KmsSignKeyRevealOwner(C)@r & HonestKmsOwner(C)@i)"
// #region(collapsed) Proof
simplify
solve( Commit( 'Client', 'Agent',
               <AgentId, ClientId, k1, k2>
       ) @ #i )
  case Client_RecvHandshakeComplete
  solve( Client_S6( ~RunId, $ClientId, $KMSId, $AgentId,
                    $ClientLtKeyId, AgentLtKeyId, X, SigX, ReaderId, ~y, SigY
         ) ▶₀ #i )
    case Client_SendSecureSessionResponse
    solve( In_KMS( $ClientId, $KMSId, ~RunId,
                   <'SignRequest', $LtkARN, payload, ReceiverId>
           )[+] ▶₂ #vr.9 )
      case ChanIn_KMS
      solve( In_KMS( $KMSId, $ClientId, ~RunId, 'VerifyResponse'
             )[+] ▶₁ #vr.4 )
        case ChanIn_KMS
        solve( In_KMS( $ClientId, $KMSId, ~RunId,
                       <'VerifyRequest', $LtkARN, payload.1,
                        sign(<payload.1, $KeyOwnerId>, ~SignKey.1), $KeyOwnerId>
               )[+] ▶₂ #vr.20 )
          case ChanIn_KMS
          solve( (∀ #j. (K( <kdf1(z), kdf2(z)> ) @ #j) ⇒ ⊥) ∥
                 (∃ C #r.
                   (KmsSignKeyRevealOwner( C ) @ #r) ∧ (HonestKmsOwner( C ) @ #i)) ∥
                 (∃ C #r. (LtkReveal( C ) @ #r) ∧ (HonestReader( C ) @ #i)) )
            case case_1
            solve( !KU( sign(<<X, ReaderId>, $ClientId>, ~SignKey)
                   ) @ #vk.8 )
              case Agent_SendEncryptedSessionKey
              solve( In_KMS( $KMSId.1, $ClientId, ~RunId.1,
                             <'SignResponse',
                              sign(<payload.1, ReceiverId>, ~SignKey.2)>
                     )[+] ▶₁ #vr.40 )
                case ChanIn_KMS
                solve( In_KMS( $ClientId, $KMSId.1, ~RunId.1,
                               <'SignRequest', $LtkARN.1, payload.1, ReceiverId>
                       )[+] ▶₂ #vr.50 )
                  case ChanIn_KMS_case_1
                  by solve( In_KMS( $ClientId, $KMSId.1, ~RunId.1,
                                    <'SignRequest', $LtkARN, <X, ReaderId>,
                                     $ClientId>
                            )[+] ▶₂ #vr.37 )
                next
                  case ChanIn_KMS_case_2
                  by contradiction /* cyclic */
                qed
              qed
            next
              case Agent_SendSecureSessionRequest_case_1
              solve( In_KMS( $KMSId.1, $ClientId, ~RunId.1,
                             <'SignResponse',
                              sign(<<X, ReaderId>, $ClientId>, ~SignKey)>
                     )[+] ▶₁ #vr.29 )
                case ChanIn_KMS
                solve( In_KMS( $ClientId, $KMSId.1, ~RunId.1,
                               <'SignRequest', $LtkARN, <X, ReaderId>, $ClientId
                               >
                       )[+] ▶₂ #vr.38 )
                  case ChanIn_KMS
                  solve( !KU( senc(<'HandshakeCompletePayload', payload
                                   >,
                                   kdf1('g'^(~x*~y)))
                         ) @ #vk.6 )
                    case Agent_SendHandshakeComplete_case_1
                    solve( In_KMS( $KMSId.2, $AgentId.1, ~RunId.2,
                                   <'SignResponse',
                                    sign(<payload.1, ReceiverId>, ~SignKey.2)>
                           )[+] ▶₁ #vr.57 )
                      case ChanIn_KMS
                      solve( In_KMS( $AgentId.1, $KMSId.2, ~RunId.2,
                                     <'SignRequest', $LtkARN, payload.1, ReceiverId>
                             )[+] ▶₂ #vr.67 )
                        case ChanIn_KMS_case_1
                        solve( In_KMS( $AgentId.1, $KMSId.2, ~RunId.2,
                                       <'SignRequest', $LtkARN.1, payload.1, ReceiverId
                                       >
                               )[+] ▶₂ #vr.53 )
                          case ChanIn_KMS
                          solve( In_KMS( $KMSId.2, $AgentId.1, ~RunId.2,
                                         'VerifyResponse'
                                 )[+] ▶₁ #vr.48 )
                            case ChanIn_KMS
                            solve( In_KMS( $AgentId.1, $KMSId.2, ~RunId.2,
                                           <'VerifyRequest', $LtkARN.1, payload.1,
                                            sign(<payload.1, $KeyOwnerId>, ~SignKey.4),
                                            $KeyOwnerId>
                                   )[+] ▶₂ #vr.78 )
                              case ChanIn_KMS
                              solve( splitEqs(8) )
                                case split_case_1
                                solve( !KU( sign(<'g'^~y, $ClientId>, ~SignKey.2)
                                       ) @ #vk.18 )
                                  case Agent_SendEncryptedSessionKey
                                  by solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                    <'SignRequest', $LtkARN,
                                                     'g'^~y, $ClientId>
                                            )[+] ▶₂ #vr.84 )
                                next
                                  case Agent_SendSecureSessionRequest_case_1
                                  by solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                    <'SignRequest', $LtkARN,
                                                     'g'^~y, $ClientId>
                                            )[+] ▶₂ #vr.80 )
                                next
                                  case Agent_SendSecureSessionRequest_case_2
                                  by solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                    <'SignRequest', $LtkARN,
                                                     'g'^~y, $ClientId>
                                            )[+] ▶₂ #vr.81 )
                                next
                                  case Client_SendSecureSessionResponse_case_1
                                  solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                 <'SignRequest', $LtkARN,
                                                  'g'^~y, $ClientId>
                                         )[+] ▶₂ #vr.84 )
                                    case ChanIn_KMS
                                    solve( Commit( 'Client', 'Agent',
                                                   <AgentId2, ClientId2,
                                                    kdf1('g'^(~x*~y)),
                                                    kdf2('g'^(~x*~y))>
                                           ) @ #i2 )
                                      case Client_RecvHandshakeComplete
                                      solve( Client_S6( ~RunId.1, $ClientId, $KMSId.1, $AgentId.1,
                                                        $ClientLtKeyId.1, AgentLtKeyId.1,
                                                        'g'^x.1, SigX, ReaderId.1, ~y.1,
                                                        SigY
                                             ) ▶₀ #i2 )
                                        case Client_SendSecureSessionResponse
                                        solve( splitEqs(16) )
                                          case split_case_1
                                          by contradiction /* from formulas */
                                        next
                                          case split_case_2
                                          solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.26 )
                                            case Agent_SendSecureSessionRequest
                                            by solve( !KU( ~y ) @ #vk.33 )
                                          next
                                            case Client_SendSecureSessionResponse
                                            by solve( !KU( ~x ) @ #vk.33 )
                                          next
                                            case c_exp
                                            by solve( !KU( ~x ) @ #vk.34 )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case Client_SendSecureSessionResponse_case_2
                                  solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                 <'SignRequest', $LtkARN,
                                                  'g'^~y, $ClientId>
                                         )[+] ▶₂ #vr.85 )
                                    case ChanIn_KMS
                                    solve( Commit( 'Client', 'Agent',
                                                   <AgentId2, ClientId2,
                                                    kdf1('g'^(~x*~y)),
                                                    kdf2('g'^(~x*~y))>
                                           ) @ #i2 )
                                      case Client_RecvHandshakeComplete
                                      solve( Client_S6( ~RunId.1, $ClientId, $KMSId.1, $AgentId.1,
                                                        $ClientLtKeyId.1, AgentLtKeyId.1,
                                                        'g'^x.1, SigX, ReaderId.1, ~y.1,
                                                        SigY
                                             ) ▶₀ #i2 )
                                        case Client_SendSecureSessionResponse
                                        solve( splitEqs(16) )
                                          case split_case_1
                                          by contradiction /* from formulas */
                                        next
                                          case split_case_2
                                          solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.26 )
                                            case Agent_SendSecureSessionRequest
                                            by solve( !KU( ~y ) @ #vk.33 )
                                          next
                                            case Client_SendSecureSessionResponse
                                            by solve( !KU( ~x ) @ #vk.33 )
                                          next
                                            case c_exp
                                            by solve( !KU( ~x ) @ #vk.34 )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case c_sign
                                  solve( !KU( ~SignKey.2 ) @ #vk.23 )
                                    case Reveal_KmsSignKey
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~x*~y*inv(~x.1)) ) @ #vk.16 )
                                  case Agent_SendSecureSessionRequest
                                  by solve( !KU( ~y ) @ #vk.23 )
                                next
                                  case Client_SendSecureSessionResponse_case_1
                                  by solve( !KU( ~x ) @ #vk.23 )
                                next
                                  case Client_SendSecureSessionResponse_case_2
                                  by solve( !KU( ~x ) @ #vk.23 )
                                next
                                  case c_exp
                                  by solve( !KU( ~x ) @ #vk.24 )
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case ChanIn_KMS_case_2
                        by contradiction /* cyclic */
                      qed
                    qed
                  next
                    case Agent_SendHandshakeComplete_case_2
                    solve( In_KMS( $KMSId.2, $AgentId.1, ~RunId.2,
                                   <'SignResponse',
                                    sign(<payload.1, ReceiverId>, ~SignKey.2)>
                           )[+] ▶₁ #vr.58 )
                      case ChanIn_KMS
                      solve( In_KMS( $AgentId.1, $KMSId.2, ~RunId.2,
                                     <'SignRequest', $LtkARN, payload.1, ReceiverId>
                             )[+] ▶₂ #vr.68 )
                        case ChanIn_KMS_case_1
                        solve( In_KMS( $KMSId.2, $AgentId.1, ~RunId.2,
                                       'VerifyResponse'
                               )[+] ▶₁ #vr.49 )
                          case ChanIn_KMS
                          solve( In_KMS( $AgentId.1, $KMSId.2, ~RunId.2,
                                         <'VerifyRequest', $LtkARN.2, payload.2,
                                          sign(<payload.2, $KeyOwnerId>, ~SignKey.4),
                                          $KeyOwnerId>
                                 )[+] ▶₂ #vr.75 )
                            case ChanIn_KMS
                            solve( splitEqs(8) )
                              case split_case_1
                              solve( !KU( sign(<'g'^~y, $ClientId>, ~SignKey.2)
                                     ) @ #vk.18 )
                                case Agent_SendEncryptedSessionKey
                                by solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                  <'SignRequest', $LtkARN,
                                                   'g'^~y, $ClientId>
                                          )[+] ▶₂ #vr.81 )
                              next
                                case Agent_SendSecureSessionRequest_case_1
                                by solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                  <'SignRequest', $LtkARN,
                                                   'g'^~y, $ClientId>
                                          )[+] ▶₂ #vr.77 )
                              next
                                case Agent_SendSecureSessionRequest_case_2
                                by solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                  <'SignRequest', $LtkARN,
                                                   'g'^~y, $ClientId>
                                          )[+] ▶₂ #vr.78 )
                              next
                                case Client_SendSecureSessionResponse_case_1
                                solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                               <'SignRequest', $LtkARN, 'g'^~y,
                                                $ClientId>
                                       )[+] ▶₂ #vr.81 )
                                  case ChanIn_KMS
                                  solve( Commit( 'Client', 'Agent',
                                                 <AgentId2, ClientId2,
                                                  kdf1('g'^(~x*~y)),
                                                  kdf2('g'^(~x*~y))>
                                         ) @ #i2 )
                                    case Client_RecvHandshakeComplete
                                    solve( Client_S6( ~RunId.1, $ClientId, $KMSId.1, $AgentId.1,
                                                      $ClientLtKeyId.1, AgentLtKeyId.1,
                                                      'g'^x.1, SigX, ReaderId.1, ~y.1, SigY
                                           ) ▶₀ #i2 )
                                      case Client_SendSecureSessionResponse
                                      solve( splitEqs(14) )
                                        case split_case_1
                                        by contradiction /* from formulas */
                                      next
                                        case split_case_2
                                        solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.26 )
                                          case Agent_SendSecureSessionRequest
                                          by solve( !KU( ~y ) @ #vk.33 )
                                        next
                                          case Client_SendSecureSessionResponse
                                          by solve( !KU( ~x ) @ #vk.33 )
                                        next
                                          case c_exp
                                          by solve( !KU( ~x ) @ #vk.34 )
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              next
                                case Client_SendSecureSessionResponse_case_2
                                solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                               <'SignRequest', $LtkARN, 'g'^~y,
                                                $ClientId>
                                       )[+] ▶₂ #vr.82 )
                                  case ChanIn_KMS
                                  solve( Commit( 'Client', 'Agent',
                                                 <AgentId2, ClientId2,
                                                  kdf1('g'^(~x*~y)),
                                                  kdf2('g'^(~x*~y))>
                                         ) @ #i2 )
                                    case Client_RecvHandshakeComplete
                                    solve( Client_S6( ~RunId.1, $ClientId, $KMSId.1, $AgentId.1,
                                                      $ClientLtKeyId.1, AgentLtKeyId.1,
                                                      'g'^x.1, SigX, ReaderId.1, ~y.1, SigY
                                           ) ▶₀ #i2 )
                                      case Client_SendSecureSessionResponse
                                      solve( splitEqs(14) )
                                        case split_case_1
                                        by contradiction /* from formulas */
                                      next
                                        case split_case_2
                                        solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.26 )
                                          case Agent_SendSecureSessionRequest
                                          by solve( !KU( ~y ) @ #vk.33 )
                                        next
                                          case Client_SendSecureSessionResponse
                                          by solve( !KU( ~x ) @ #vk.33 )
                                        next
                                          case c_exp
                                          by solve( !KU( ~x ) @ #vk.34 )
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              next
                                case c_sign
                                solve( !KU( ~SignKey.2 ) @ #vk.23 )
                                  case Reveal_KmsSignKey
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case split_case_2
                              solve( !KU( 'g'^(~x*~y*inv(~x.1)) ) @ #vk.16 )
                                case Agent_SendSecureSessionRequest
                                by solve( !KU( ~y ) @ #vk.23 )
                              next
                                case Client_SendSecureSessionResponse_case_1
                                by solve( !KU( ~x ) @ #vk.23 )
                              next
                                case Client_SendSecureSessionResponse_case_2
                                by solve( !KU( ~x ) @ #vk.23 )
                              next
                                case c_exp
                                by solve( !KU( ~x ) @ #vk.24 )
                              qed
                            qed
                          qed
                        qed
                      next
                        case ChanIn_KMS_case_2
                        by contradiction /* cyclic */
                      qed
                    qed
                  next
                    case c_senc
                    solve( !KU( kdf1('g'^(~x*~y)) ) @ #vk.13 )
                      case Agent_SendEncryptedSessionKey
                      solve( splitEqs(7) )
                        case split_case_1
                        solve( !KU( ~ltk ) @ #vk.16 )
                          case Reveal_ltk
                          by contradiction /* from formulas */
                        qed
                      next
                        case split_case_2
                        solve( !KU( 'g'^(~x*~y*inv(~x.1)) ) @ #vk.20 )
                          case Agent_SendSecureSessionRequest
                          by solve( !KU( ~y ) @ #vk.27 )
                        next
                          case Client_SendSecureSessionResponse_case_1
                          by solve( !KU( ~x ) @ #vk.27 )
                        next
                          case Client_SendSecureSessionResponse_case_2
                          by solve( !KU( ~x ) @ #vk.27 )
                        next
                          case c_exp
                          by solve( !KU( ~x ) @ #vk.28 )
                        qed
                      qed
                    next
                      case c_kdf1
                      solve( !KU( 'g'^(~x*~y) ) @ #vk.16 )
                        case Agent_SendSecureSessionRequest
                        by solve( !KU( ~y ) @ #vk.17 )
                      next
                        case Client_SendSecureSessionResponse_case_1
                        by solve( !KU( ~x ) @ #vk.17 )
                      next
                        case Client_SendSecureSessionResponse_case_2
                        by solve( !KU( ~x ) @ #vk.17 )
                      next
                        case c_exp
                        by solve( !KU( ~x ) @ #vk.19 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case Agent_SendSecureSessionRequest_case_2
              solve( In_KMS( $KMSId.1, $ClientId, ~RunId.1,
                             <'SignResponse',
                              sign(<<X, ReaderId>, $ClientId>, ~SignKey)>
                     )[+] ▶₁ #vr.30 )
                case ChanIn_KMS
                solve( In_KMS( $ClientId, $KMSId.1, ~RunId.1,
                               <'SignRequest', $LtkARN, <X, ReaderId>, $ClientId
                               >
                       )[+] ▶₂ #vr.39 )
                  case ChanIn_KMS
                  solve( !KU( senc(<'HandshakeCompletePayload', payload
                                   >,
                                   kdf1('g'^(~x*~y)))
                         ) @ #vk.5 )
                    case Agent_SendHandshakeComplete_case_1
                    solve( In_KMS( $KMSId.2, $AgentId.1, ~RunId.2,
                                   <'SignResponse',
                                    sign(<payload.1, ReceiverId>, ~SignKey.2)>
                           )[+] ▶₁ #vr.58 )
                      case ChanIn_KMS
                      solve( In_KMS( $AgentId.1, $KMSId.2, ~RunId.2,
                                     <'SignRequest', $LtkARN.1, payload.2, ReceiverId.1
                                     >
                             )[+] ▶₂ #vr.54 )
                        case ChanIn_KMS_case_1
                        solve( In_KMS( $AgentId.1, $KMSId.2, ~RunId.2,
                                       <'SignRequest', $LtkARN, payload.1, ReceiverId>
                               )[+] ▶₂ #vr.68 )
                          case ChanIn_KMS
                          by contradiction /* cyclic */
                        qed
                      next
                        case ChanIn_KMS_case_2
                        solve( In_KMS( $AgentId.1, $KMSId.2, ~RunId.2,
                                       <'SignRequest', $LtkARN, payload.1, ReceiverId>
                               )[+] ▶₂ #vr.68 )
                          case ChanIn_KMS
                          solve( In_KMS( $KMSId.2, $AgentId.1, ~RunId.2,
                                         'VerifyResponse'
                                 )[+] ▶₁ #vr.49 )
                            case ChanIn_KMS
                            solve( In_KMS( $AgentId.1, $KMSId.2, ~RunId.2,
                                           <'VerifyRequest', $LtkARN.1, payload.1,
                                            sign(<payload.1, $KeyOwnerId>, ~SignKey.4),
                                            $KeyOwnerId>
                                   )[+] ▶₂ #vr.79 )
                              case ChanIn_KMS
                              solve( splitEqs(8) )
                                case split_case_1
                                solve( !KU( sign(<'g'^~y, $ClientId>, ~SignKey.2)
                                       ) @ #vk.18 )
                                  case Agent_SendEncryptedSessionKey
                                  solve( In_KMS( $KMSId.2, $ClientId, ~RunId.2,
                                                 <'SignResponse',
                                                  sign(<payload.1, ReceiverId>, ~SignKey.4)
                                                 >
                                         )[+] ▶₁ #vr.88 )
                                    case ChanIn_KMS
                                    by solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                      <'SignRequest', $LtkARN.1,
                                                       'g'^~y, $ClientId>
                                              )[+] ▶₂ #vr.85 )
                                  qed
                                next
                                  case Agent_SendSecureSessionRequest_case_1
                                  by solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                    <'SignRequest', $LtkARN,
                                                     'g'^~y, $ClientId>
                                            )[+] ▶₂ #vr.81 )
                                next
                                  case Agent_SendSecureSessionRequest_case_2
                                  by solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                    <'SignRequest', $LtkARN,
                                                     'g'^~y, $ClientId>
                                            )[+] ▶₂ #vr.82 )
                                next
                                  case Client_SendSecureSessionResponse_case_1
                                  solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                 <'SignRequest', $LtkARN,
                                                  'g'^~y, $ClientId>
                                         )[+] ▶₂ #vr.85 )
                                    case ChanIn_KMS
                                    solve( Commit( 'Client', 'Agent',
                                                   <AgentId2, ClientId2,
                                                    kdf1('g'^(~x*~y)),
                                                    kdf2('g'^(~x*~y))>
                                           ) @ #i2 )
                                      case Client_RecvHandshakeComplete
                                      solve( Client_S6( ~RunId.1, $ClientId, $KMSId.1, $AgentId.1,
                                                        $ClientLtKeyId.1, AgentLtKeyId.1,
                                                        'g'^x.1, SigX, ReaderId.1, ~y.1,
                                                        SigY
                                             ) ▶₀ #i2 )
                                        case Client_SendSecureSessionResponse
                                        solve( splitEqs(16) )
                                          case split_case_1
                                          by contradiction /* from formulas */
                                        next
                                          case split_case_2
                                          solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.26 )
                                            case Agent_SendSecureSessionRequest
                                            by solve( !KU( ~y ) @ #vk.33 )
                                          next
                                            case Client_SendSecureSessionResponse
                                            by solve( !KU( ~x ) @ #vk.33 )
                                          next
                                            case c_exp
                                            by solve( !KU( ~x ) @ #vk.34 )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case Client_SendSecureSessionResponse_case_2
                                  solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                 <'SignRequest', $LtkARN,
                                                  'g'^~y, $ClientId>
                                         )[+] ▶₂ #vr.86 )
                                    case ChanIn_KMS
                                    solve( Commit( 'Client', 'Agent',
                                                   <AgentId2, ClientId2,
                                                    kdf1('g'^(~x*~y)),
                                                    kdf2('g'^(~x*~y))>
                                           ) @ #i2 )
                                      case Client_RecvHandshakeComplete
                                      solve( Client_S6( ~RunId.1, $ClientId, $KMSId.1, $AgentId.1,
                                                        $ClientLtKeyId.1, AgentLtKeyId.1,
                                                        'g'^x.1, SigX, ReaderId.1, ~y.1,
                                                        SigY
                                             ) ▶₀ #i2 )
                                        case Client_SendSecureSessionResponse
                                        solve( splitEqs(16) )
                                          case split_case_1
                                          by contradiction /* from formulas */
                                        next
                                          case split_case_2
                                          solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.26 )
                                            case Agent_SendSecureSessionRequest
                                            by solve( !KU( ~y ) @ #vk.33 )
                                          next
                                            case Client_SendSecureSessionResponse
                                            by solve( !KU( ~x ) @ #vk.33 )
                                          next
                                            case c_exp
                                            by solve( !KU( ~x ) @ #vk.34 )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case c_sign
                                  solve( !KU( ~SignKey.2 ) @ #vk.23 )
                                    case Reveal_KmsSignKey
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~x*~y*inv(~x.1)) ) @ #vk.16 )
                                  case Agent_SendSecureSessionRequest
                                  by solve( !KU( ~y ) @ #vk.23 )
                                next
                                  case Client_SendSecureSessionResponse_case_1
                                  by solve( !KU( ~x ) @ #vk.23 )
                                next
                                  case Client_SendSecureSessionResponse_case_2
                                  by solve( !KU( ~x ) @ #vk.23 )
                                next
                                  case c_exp
                                  by solve( !KU( ~x ) @ #vk.24 )
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case Agent_SendHandshakeComplete_case_2
                    solve( In_KMS( $KMSId.2, $AgentId.1, ~RunId.2,
                                   <'SignResponse',
                                    sign(<payload.1, ReceiverId>, ~SignKey.2)>
                           )[+] ▶₁ #vr.59 )
                      case ChanIn_KMS
                      solve( In_KMS( $AgentId.1, $KMSId.2, ~RunId.2,
                                     <'SignRequest', $LtkARN.1, payload.2, ReceiverId.1
                                     >
                             )[+] ▶₂ #vr.55 )
                        case ChanIn_KMS_case_1
                        solve( In_KMS( $AgentId.1, $KMSId.2, ~RunId.2,
                                       <'SignRequest', $LtkARN, payload.1, ReceiverId>
                               )[+] ▶₂ #vr.69 )
                          case ChanIn_KMS
                          by contradiction /* cyclic */
                        qed
                      next
                        case ChanIn_KMS_case_2
                        solve( In_KMS( $AgentId.1, $KMSId.2, ~RunId.2,
                                       <'SignRequest', $LtkARN, payload.1, ReceiverId>
                               )[+] ▶₂ #vr.69 )
                          case ChanIn_KMS
                          solve( In_KMS( $KMSId.2, $AgentId.1, ~RunId.2,
                                         'VerifyResponse'
                                 )[+] ▶₁ #vr.50 )
                            case ChanIn_KMS
                            solve( In_KMS( $AgentId.1, $KMSId.2, ~RunId.2,
                                           <'VerifyRequest', $LtkARN.1, payload.1,
                                            sign(<payload.1, $KeyOwnerId>, ~SignKey.4),
                                            $KeyOwnerId>
                                   )[+] ▶₂ #vr.80 )
                              case ChanIn_KMS
                              solve( splitEqs(8) )
                                case split_case_1
                                solve( !KU( sign(<'g'^~y, $ClientId>, ~SignKey.2)
                                       ) @ #vk.18 )
                                  case Agent_SendEncryptedSessionKey
                                  by solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                    <'SignRequest', $LtkARN,
                                                     'g'^~y, $ClientId>
                                            )[+] ▶₂ #vr.86 )
                                next
                                  case Agent_SendSecureSessionRequest_case_1
                                  by solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                    <'SignRequest', $LtkARN,
                                                     'g'^~y, $ClientId>
                                            )[+] ▶₂ #vr.82 )
                                next
                                  case Agent_SendSecureSessionRequest_case_2
                                  by solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                    <'SignRequest', $LtkARN,
                                                     'g'^~y, $ClientId>
                                            )[+] ▶₂ #vr.83 )
                                next
                                  case Client_SendSecureSessionResponse_case_1
                                  solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                 <'SignRequest', $LtkARN,
                                                  'g'^~y, $ClientId>
                                         )[+] ▶₂ #vr.86 )
                                    case ChanIn_KMS
                                    solve( Commit( 'Client', 'Agent',
                                                   <AgentId2, ClientId2,
                                                    kdf1('g'^(~x*~y)),
                                                    kdf2('g'^(~x*~y))>
                                           ) @ #i2 )
                                      case Client_RecvHandshakeComplete
                                      solve( Client_S6( ~RunId.1, $ClientId, $KMSId.1, $AgentId.1,
                                                        $ClientLtKeyId.1, AgentLtKeyId.1,
                                                        'g'^x.1, SigX, ReaderId.1, ~y.1,
                                                        SigY
                                             ) ▶₀ #i2 )
                                        case Client_SendSecureSessionResponse
                                        solve( splitEqs(16) )
                                          case split_case_1
                                          by contradiction /* from formulas */
                                        next
                                          case split_case_2
                                          solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.26 )
                                            case Agent_SendSecureSessionRequest
                                            by solve( !KU( ~y ) @ #vk.33 )
                                          next
                                            case Client_SendSecureSessionResponse
                                            by solve( !KU( ~x ) @ #vk.33 )
                                          next
                                            case c_exp
                                            by solve( !KU( ~x ) @ #vk.34 )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case Client_SendSecureSessionResponse_case_2
                                  solve( In_KMS( $ClientId, $KMSId.2, ~RunId.2,
                                                 <'SignRequest', $LtkARN,
                                                  'g'^~y, $ClientId>
                                         )[+] ▶₂ #vr.87 )
                                    case ChanIn_KMS
                                    solve( Commit( 'Client', 'Agent',
                                                   <AgentId2, ClientId2,
                                                    kdf1('g'^(~x*~y)),
                                                    kdf2('g'^(~x*~y))>
                                           ) @ #i2 )
                                      case Client_RecvHandshakeComplete
                                      solve( Client_S6( ~RunId.1, $ClientId, $KMSId.1, $AgentId.1,
                                                        $ClientLtKeyId.1, AgentLtKeyId.1,
                                                        'g'^x.1, SigX, ReaderId.1, ~y.1,
                                                        SigY
                                             ) ▶₀ #i2 )
                                        case Client_SendSecureSessionResponse
                                        solve( splitEqs(16) )
                                          case split_case_1
                                          by contradiction /* from formulas */
                                        next
                                          case split_case_2
                                          solve( !KU( 'g'^(~x*~y*inv(~y.1)) ) @ #vk.26 )
                                            case Agent_SendSecureSessionRequest
                                            by solve( !KU( ~y ) @ #vk.33 )
                                          next
                                            case Client_SendSecureSessionResponse
                                            by solve( !KU( ~x ) @ #vk.33 )
                                          next
                                            case c_exp
                                            by solve( !KU( ~x ) @ #vk.34 )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case c_sign
                                  solve( !KU( ~SignKey.2 ) @ #vk.23 )
                                    case Reveal_KmsSignKey
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              next
                                case split_case_2
                                solve( !KU( 'g'^(~x*~y*inv(~x.1)) ) @ #vk.16 )
                                  case Agent_SendSecureSessionRequest
                                  by solve( !KU( ~y ) @ #vk.23 )
                                next
                                  case Client_SendSecureSessionResponse_case_1
                                  by solve( !KU( ~x ) @ #vk.23 )
                                next
                                  case Client_SendSecureSessionResponse_case_2
                                  by solve( !KU( ~x ) @ #vk.23 )
                                next
                                  case c_exp
                                  by solve( !KU( ~x ) @ #vk.24 )
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_senc
                    solve( !KU( kdf1('g'^(~x*~y)) ) @ #vk.13 )
                      case Agent_SendEncryptedSessionKey
                      solve( splitEqs(7) )
                        case split_case_1
                        solve( !KU( ~ltk ) @ #vk.16 )
                          case Reveal_ltk
                          by contradiction /* from formulas */
                        qed
                      next
                        case split_case_2
                        solve( !KU( 'g'^(~x*~y*inv(~x.1)) ) @ #vk.20 )
                          case Agent_SendSecureSessionRequest
                          by solve( !KU( ~y ) @ #vk.27 )
                        next
                          case Client_SendSecureSessionResponse_case_1
                          by solve( !KU( ~x ) @ #vk.27 )
                        next
                          case Client_SendSecureSessionResponse_case_2
                          by solve( !KU( ~x ) @ #vk.27 )
                        next
                          case c_exp
                          by solve( !KU( ~x ) @ #vk.28 )
                        qed
                      qed
                    next
                      case c_kdf1
                      solve( !KU( 'g'^(~x*~y) ) @ #vk.16 )
                        case Agent_SendSecureSessionRequest
                        by solve( !KU( ~y ) @ #vk.17 )
                      next
                        case Client_SendSecureSessionResponse_case_1
                        by solve( !KU( ~x ) @ #vk.17 )
                      next
                        case Client_SendSecureSessionResponse_case_2
                        by solve( !KU( ~x ) @ #vk.17 )
                      next
                        case c_exp
                        by solve( !KU( ~x ) @ #vk.19 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case Client_SendSecureSessionResponse_case_1
              by solve( In_KMS( $ClientId, $KMSId.1, ~RunId.1,
                                <'SignRequest', $LtkARN, <X, ReaderId>, $ClientId
                                >
                        )[+] ▶₂ #vr.37 )
            next
              case Client_SendSecureSessionResponse_case_2
              by solve( In_KMS( $ClientId, $KMSId.1, ~RunId.1,
                                <'SignRequest', $LtkARN, <X, ReaderId>, $ClientId
                                >
                        )[+] ▶₂ #vr.38 )
            next
              case c_sign
              solve( !KU( ~SignKey ) @ #vk.14 )
                case Reveal_KmsSignKey
                by contradiction /* from formulas */
              qed
            qed
          next
            case case_2
            by contradiction /* from formulas */
          next
            case case_3
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  qed
qed
// #endregion
// End lemmas

end
