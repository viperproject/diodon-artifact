diff --git a/initiator/initiator.go b/initiator/initiator.go
index 53a5c19..7217466 100644
--- a/initiator/initiator.go
+++ b/initiator/initiator.go
@@ -36,6 +36,15 @@ type Initiator struct {
 	//@ ghost YT tm.Term
 }
 
+// FOR DIODON ARTIFACT ONLY:
+// This method does not establish the Core invariant as a postcondition,
+// therefore is unsafe to call in the Application.
+// It leaks a pointer to the initiator state which can be used to modify
+// the Core state outside of the Core.
+func (i *Initiator) GetStatePtr() *InitiatorState {
+	return &i.initiatorState
+}
+
 type InitiatorState int
 
 const (
diff --git a/main.go b/main.go
index a6f6fc1..626a4ff 100644
--- a/main.go
+++ b/main.go
@@ -87,6 +87,9 @@ func main() {
 		reportAndExit(err)
 	}
 
+	state := initor.GetStatePtr()
+	println(state)
+
 	// handshake is now over
 	scanner := bufio.NewScanner(os.Stdin)
 	fmt.Println("Enter a payload to be sent:")
