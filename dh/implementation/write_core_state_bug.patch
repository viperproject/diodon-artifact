diff --git a/dh/implementation/initiator/initiator.go b/dh/implementation/initiator/initiator.go
index b8632f5..7b334ce 100644
--- a/dh/implementation/initiator/initiator.go
+++ b/dh/implementation/initiator/initiator.go
@@ -35,6 +35,15 @@ type Initiator struct {
 	//@ ghost YT tm.Term
 }
 
+// FOR DIODON ARTIFACT ONLY:
+// This method does not establish the Core invariant as a postcondition,
+// therefore is unsafe to call in the Application.
+// It leaks a pointer to the initiator state which can be used to modify
+// the Core state outside of the Core.
+func (i *Initiator) GetState() *InitiatorState {
+	return &i.initiatorState
+}
+
 type InitiatorState int
 const (
 	Erroneous InitiatorState = 0
diff --git a/dh/implementation/main.go b/dh/implementation/main.go
index 99788ad..197320a 100644
--- a/dh/implementation/main.go
+++ b/dh/implementation/main.go
@@ -62,6 +62,9 @@ func main() {
 		reportAndExit(err)
 	}
 
+	state := initiator.GetState()
+	*state = 0
+
 	err = iolib.Send(hsMsg1)
 	if err != nil {
 		reportAndExit(err)
